{
  "contractName": "ICO",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "ttkAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_multiSigAddr",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_decimals",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_exchangeRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_maxCap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vestingDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_stepDuration",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "claimer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Claimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "TokenPurchase",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "emitter",
          "type": "address"
        }
      ],
      "name": "WorkflowStatusChange",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "UserInfo",
      "outputs": [
        {
          "internalType": "bool",
          "name": "whitelisted",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "amountBought",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "totalClaimed",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "exchangeRate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "maxAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "maxCap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "minAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalContribution",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "workflowStatus",
      "outputs": [
        {
          "internalType": "enum ICO.WorkflowStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "stateMutability": "payable",
      "type": "receive",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "whitelistAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "removeFromWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buyTokens",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [],
      "name": "claimTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "claimableAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "setAmountForSale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawRemaining",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawEth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startIco",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "endIco",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "startTokenDistribution",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"ttkAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_multiSigAddr\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_exchangeRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_maxCap\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_vestingDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stepDuration\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"claimer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"purchaser\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TokenPurchase\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"emitter\",\"type\":\"address\"}],\"name\":\"WorkflowStatusChange\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"UserInfo\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"whitelisted\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"amountBought\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalClaimed\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"claimableAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"endIco\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"exchangeRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxCap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeFromWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"setAmountForSale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startIco\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startTokenDistribution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalContribution\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"whitelistAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawRemaining\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"workflowStatus\",\"outputs\":[{\"internalType\":\"enum ICO.WorkflowStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"buyTokens()\":{\"notice\":\"send tokens to the smart contract USING this function /// there will be an input field for it on the front ///\"},\"setAmountForSale(uint256)\":{\"notice\":\"this is use in a very urgent situation like : we need to withdraw the tokens inside the contract to migrate to an other ICO contract but we haven't properly labelled all the variables during deployment then we need to manually set amountForSale to withdraw the right amount from the contract  OR it can be used if we want to withdraw the remaining tokens from the ICO \"},\"withdrawEth()\":{\"notice\":\"Collect the ETH raised \"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/ICO.sol\":\"ICO\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/ICO.sol\":{\"keccak256\":\"0x8db4e16c93f8463effa89677dc30a6c97cf0d6e0661c606634dd804f424fabd8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://3c5ff8137374a568774e1cfbd301a0b33732e37b7f7dbc6f068070ee0d7979ba\",\"dweb:/ipfs/QmUQaa7suw3y9G5r1mKg2UjzvmSF3RKh9eyruVoePuhn8V\"]},\"project:/node_modules/@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"project:/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"project:/node_modules/@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:2603:4",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:4",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "74:117:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "84:22:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "99:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "93:13:4"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "84:5:4"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "169:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "178:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "181:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "171:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "171:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "171:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "128:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "139:5:4"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "154:3:4",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "159:1:4",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "150:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "150:11:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "163:1:4",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "146:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "146:19:4"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "135:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "135:31:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "125:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:42:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "118:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "118:50:4"
                  },
                  "nodeType": "YulIf",
                  "src": "115:70:4"
                }
              ]
            },
            "name": "abi_decode_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "53:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:4",
                "type": ""
              }
            ],
            "src": "14:177:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "413:509:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "460:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "469:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "472:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "462:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "462:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "462:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "434:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "443:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "430:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "430:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "455:3:4",
                        "type": "",
                        "value": "288"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "426:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "426:33:4"
                  },
                  "nodeType": "YulIf",
                  "src": "423:53:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "485:50:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "525:9:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "495:29:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "495:40:4"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "485:6:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "544:59:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "588:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "599:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "584:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "584:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "554:29:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "554:49:4"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "544:6:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "612:35:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "632:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "643:2:4",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "628:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "628:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "622:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "622:25:4"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "612:6:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "656:35:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "676:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "687:2:4",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "672:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "672:18:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "666:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "666:25:4"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "656:6:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "700:36:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "720:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "731:3:4",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "716:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "716:19:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "710:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "710:26:4"
                  },
                  "variableNames": [
                    {
                      "name": "value4",
                      "nodeType": "YulIdentifier",
                      "src": "700:6:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "745:36:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "765:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "776:3:4",
                            "type": "",
                            "value": "160"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "761:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "761:19:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "755:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "755:26:4"
                  },
                  "variableNames": [
                    {
                      "name": "value5",
                      "nodeType": "YulIdentifier",
                      "src": "745:6:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "790:36:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "810:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "821:3:4",
                            "type": "",
                            "value": "192"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "806:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "806:19:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "800:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "800:26:4"
                  },
                  "variableNames": [
                    {
                      "name": "value6",
                      "nodeType": "YulIdentifier",
                      "src": "790:6:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "835:36:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "855:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "866:3:4",
                            "type": "",
                            "value": "224"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "851:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "851:19:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "845:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "845:26:4"
                  },
                  "variableNames": [
                    {
                      "name": "value7",
                      "nodeType": "YulIdentifier",
                      "src": "835:6:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "880:36:4",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "900:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "911:3:4",
                            "type": "",
                            "value": "256"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "896:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "896:19:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "890:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "890:26:4"
                  },
                  "variableNames": [
                    {
                      "name": "value8",
                      "nodeType": "YulIdentifier",
                      "src": "880:6:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "315:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "326:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "338:6:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "346:6:4",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "354:6:4",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "362:6:4",
                "type": ""
              },
              {
                "name": "value4",
                "nodeType": "YulTypedName",
                "src": "370:6:4",
                "type": ""
              },
              {
                "name": "value5",
                "nodeType": "YulTypedName",
                "src": "378:6:4",
                "type": ""
              },
              {
                "name": "value6",
                "nodeType": "YulTypedName",
                "src": "386:6:4",
                "type": ""
              },
              {
                "name": "value7",
                "nodeType": "YulTypedName",
                "src": "394:6:4",
                "type": ""
              },
              {
                "name": "value8",
                "nodeType": "YulTypedName",
                "src": "402:6:4",
                "type": ""
              }
            ],
            "src": "196:726:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "959:95:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "976:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "983:3:4",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "988:10:4",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "979:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "979:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "969:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "969:31:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "969:31:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1016:1:4",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1019:4:4",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1009:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1009:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1009:15:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1040:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1043:4:4",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1033:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1033:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1033:15:4"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "927:127:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1123:358:4",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1133:16:4",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "1148:1:4",
                    "type": "",
                    "value": "1"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "1137:7:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1158:16:4",
                  "value": {
                    "name": "power_1",
                    "nodeType": "YulIdentifier",
                    "src": "1167:7:4"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "1158:5:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1183:13:4",
                  "value": {
                    "name": "_base",
                    "nodeType": "YulIdentifier",
                    "src": "1191:5:4"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "1183:4:4"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1247:228:4",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1292:22:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "1294:16:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1294:18:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1294:18:4"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "1267:4:4"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "1281:1:4",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "1277:3:4"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "1277:6:4"
                                },
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "1285:4:4"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "1273:3:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1273:17:4"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "1264:2:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1264:27:4"
                        },
                        "nodeType": "YulIf",
                        "src": "1261:53:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1353:29:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1355:25:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "1368:5:4"
                                  },
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "1375:4:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "1364:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1364:16:4"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "1355:5:4"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "1334:8:4"
                            },
                            {
                              "name": "power_1",
                              "nodeType": "YulIdentifier",
                              "src": "1344:7:4"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1330:3:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1330:22:4"
                        },
                        "nodeType": "YulIf",
                        "src": "1327:55:4"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1395:23:4",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "1407:4:4"
                            },
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "1413:4:4"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "1403:3:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1403:15:4"
                        },
                        "variableNames": [
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "1395:4:4"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "1431:34:4",
                        "value": {
                          "arguments": [
                            {
                              "name": "power_1",
                              "nodeType": "YulIdentifier",
                              "src": "1447:7:4"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "1456:8:4"
                            }
                          ],
                          "functionName": {
                            "name": "shr",
                            "nodeType": "YulIdentifier",
                            "src": "1443:3:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1443:22:4"
                        },
                        "variableNames": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "1431:8:4"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "1216:8:4"
                      },
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "1226:7:4"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1213:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1213:21:4"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "1235:3:4",
                    "statements": []
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "1209:3:4",
                    "statements": []
                  },
                  "src": "1205:270:4"
                }
              ]
            },
            "name": "checked_exp_helper",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "_base",
                "nodeType": "YulTypedName",
                "src": "1087:5:4",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "1094:8:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "1107:5:4",
                "type": ""
              },
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "1114:4:4",
                "type": ""
              }
            ],
            "src": "1059:422:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1545:747:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1583:52:4",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1597:10:4",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1606:1:4",
                          "type": "",
                          "value": "1"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "1597:5:4"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "1620:5:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "1565:8:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1558:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1558:16:4"
                  },
                  "nodeType": "YulIf",
                  "src": "1555:80:4"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1668:52:4",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "1682:10:4",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "1691:1:4",
                          "type": "",
                          "value": "0"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "1682:5:4"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "1705:5:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "1654:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1647:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1647:12:4"
                  },
                  "nodeType": "YulIf",
                  "src": "1644:76:4"
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1756:52:4",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "1770:10:4",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1779:1:4",
                              "type": "",
                              "value": "1"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "1770:5:4"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "1793:5:4"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "1749:59:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1754:1:4",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "1824:123:4",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "1859:22:4",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "1861:16:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1861:18:4"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "1861:18:4"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "1844:8:4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1854:3:4",
                                  "type": "",
                                  "value": "255"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "1841:2:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1841:17:4"
                            },
                            "nodeType": "YulIf",
                            "src": "1838:43:4"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "1894:25:4",
                            "value": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "1907:8:4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1917:1:4",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "1903:3:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1903:16:4"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "1894:5:4"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "1932:5:4"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "1817:130:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1822:1:4",
                        "type": "",
                        "value": "2"
                      }
                    }
                  ],
                  "expression": {
                    "name": "base",
                    "nodeType": "YulIdentifier",
                    "src": "1736:4:4"
                  },
                  "nodeType": "YulSwitch",
                  "src": "1729:218:4"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2045:70:4",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2059:28:4",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "2072:4:4"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "2078:8:4"
                            }
                          ],
                          "functionName": {
                            "name": "exp",
                            "nodeType": "YulIdentifier",
                            "src": "2068:3:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2068:19:4"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "2059:5:4"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "2100:5:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "1969:4:4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1975:2:4",
                                "type": "",
                                "value": "11"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "1966:2:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1966:12:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "1983:8:4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1993:2:4",
                                "type": "",
                                "value": "78"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "1980:2:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1980:16:4"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1962:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1962:35:4"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "2006:4:4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2012:3:4",
                                "type": "",
                                "value": "307"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "2003:2:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2003:13:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "2021:8:4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2031:2:4",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "2018:2:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2018:16:4"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1999:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1999:36:4"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1959:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1959:77:4"
                  },
                  "nodeType": "YulIf",
                  "src": "1956:159:4"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2124:57:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "2166:4:4"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "2172:8:4"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_helper",
                      "nodeType": "YulIdentifier",
                      "src": "2147:18:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2147:34:4"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "2128:7:4",
                      "type": ""
                    },
                    {
                      "name": "base_1",
                      "nodeType": "YulTypedName",
                      "src": "2137:6:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2226:22:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2228:16:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2228:18:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2228:18:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "2196:7:4"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2213:1:4",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "2209:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2209:6:4"
                          },
                          {
                            "name": "base_1",
                            "nodeType": "YulIdentifier",
                            "src": "2217:6:4"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "2205:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2205:19:4"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2193:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2193:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "2190:58:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2257:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "2270:7:4"
                      },
                      {
                        "name": "base_1",
                        "nodeType": "YulIdentifier",
                        "src": "2279:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "2266:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2266:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "2257:5:4"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "1516:4:4",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "1522:8:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "1535:5:4",
                "type": ""
              }
            ],
            "src": "1486:806:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2367:61:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2377:45:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "2407:4:4"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "2413:8:4"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "2386:20:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2386:36:4"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "2377:5:4"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_t_uint256_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "2338:4:4",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "2344:8:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "2357:5:4",
                "type": ""
              }
            ],
            "src": "2297:131:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2485:116:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2495:20:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2510:1:4"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2513:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "2506:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2506:9:4"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "2495:7:4"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2573:22:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2575:16:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2575:18:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2575:18:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "2544:1:4"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2537:6:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2537:9:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "2551:1:4"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "product",
                                    "nodeType": "YulIdentifier",
                                    "src": "2558:7:4"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "2567:1:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "2554:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2554:15:4"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "2548:2:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2548:22:4"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "2534:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2534:37:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2527:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2527:45:4"
                  },
                  "nodeType": "YulIf",
                  "src": "2524:71:4"
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2464:1:4",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2467:1:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "2473:7:4",
                "type": ""
              }
            ],
            "src": "2433:168:4"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256t_uint256t_uint256t_uint256t_uint256t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7, value8\n    {\n        if slt(sub(dataEnd, headStart), 288) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n        value4 := mload(add(headStart, 128))\n        value5 := mload(add(headStart, 160))\n        value6 := mload(add(headStart, 192))\n        value7 := mload(add(headStart, 224))\n        value8 := mload(add(headStart, 256))\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n}",
      "id": 4,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:10065:4",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:4",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "115:76:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "125:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "137:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "148:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "133:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "133:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "125:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "167:9:4"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "178:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "160:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "160:25:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "160:25:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "84:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "95:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "106:4:4",
                "type": ""
              }
            ],
            "src": "14:177:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "266:216:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "312:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "321:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "324:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "314:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "314:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "314:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "287:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "296:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "283:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "283:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "308:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "279:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "279:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "276:52:4"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "337:36:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "363:9:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "350:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "350:23:4"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "341:5:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "436:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "445:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "448:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "438:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "438:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "438:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "395:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "406:5:4"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "421:3:4",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "426:1:4",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "417:3:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "417:11:4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "430:1:4",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "413:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "413:19:4"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "402:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "402:31:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "392:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "392:42:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "385:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "385:50:4"
                  },
                  "nodeType": "YulIf",
                  "src": "382:70:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "461:15:4",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "471:5:4"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "461:6:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "232:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "243:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "255:6:4",
                "type": ""
              }
            ],
            "src": "196:286:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "588:102:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "598:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "610:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "621:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "606:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "606:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "598:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "640:9:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "655:6:4"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "671:3:4",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "676:1:4",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "667:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "667:11:4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "680:1:4",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "663:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "663:19:4"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "651:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "651:32:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "633:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "633:51:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "633:51:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "557:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "568:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "579:4:4",
                "type": ""
              }
            ],
            "src": "487:203:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "727:95:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "744:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "751:3:4",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "756:10:4",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "747:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "747:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "737:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "737:31:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "737:31:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "784:1:4",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "787:4:4",
                        "type": "",
                        "value": "0x21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "777:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "777:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "777:15:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "808:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "811:4:4",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "801:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "801:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "801:15:4"
                }
              ]
            },
            "name": "panic_error_0x21",
            "nodeType": "YulFunctionDefinition",
            "src": "695:127:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "943:229:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "953:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "965:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "976:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "961:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "961:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "953:4:4"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1021:111:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1042:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1049:3:4",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1054:10:4",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "1045:3:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1045:20:4"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1035:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1035:31:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1035:31:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1086:1:4",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1089:4:4",
                              "type": "",
                              "value": "0x21"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "1079:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1079:15:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1079:15:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1114:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1117:4:4",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1107:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1107:15:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1107:15:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1001:6:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1009:1:4",
                            "type": "",
                            "value": "4"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "998:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "998:13:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "991:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "991:21:4"
                  },
                  "nodeType": "YulIf",
                  "src": "988:144:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1148:9:4"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "1159:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1141:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1141:25:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1141:25:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_enum$_WorkflowStatus_$45__to_t_uint8__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "912:9:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "923:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "934:4:4",
                "type": ""
              }
            ],
            "src": "827:345:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1247:110:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1293:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1302:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1305:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1295:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1295:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1295:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1268:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1277:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1264:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1264:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1289:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1260:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1260:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "1257:52:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1318:33:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1341:9:4"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1328:12:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1328:23:4"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1318:6:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1213:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1224:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1236:6:4",
                "type": ""
              }
            ],
            "src": "1177:180:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1513:178:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1523:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1535:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1546:2:4",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1531:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1531:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1523:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1565:9:4"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "1590:6:4"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1583:6:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1583:14:4"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1576:6:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1576:22:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1558:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1558:41:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1558:41:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1619:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1630:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1615:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1615:18:4"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "1635:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1608:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1608:34:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1608:34:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1662:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1673:2:4",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1658:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1658:18:4"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "1678:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1651:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1651:34:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1651:34:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1466:9:4",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1477:6:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1485:6:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1493:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1504:4:4",
                "type": ""
              }
            ],
            "src": "1362:329:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1870:175:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1887:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1898:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1880:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1880:21:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1880:21:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1921:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1932:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1917:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1917:18:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1937:2:4",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1910:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1910:30:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1910:30:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1960:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1971:2:4",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1956:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1956:18:4"
                      },
                      {
                        "hexValue": "43616e2774206c697374206d6f726520616464726573736573",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1976:27:4",
                        "type": "",
                        "value": "Can't list more addresses"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1949:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1949:55:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1949:55:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2013:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2025:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2036:2:4",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2021:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2021:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2013:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c796f88cf3a68ae0c13fb33f5e1c80ee45cd1567c7bd20bb6f937aff6489fa21__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1847:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1861:4:4",
                "type": ""
              }
            ],
            "src": "1696:349:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2224:165:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2241:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2252:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2234:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2234:21:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2234:21:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2275:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2286:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2271:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2271:18:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2291:2:4",
                        "type": "",
                        "value": "15"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2264:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2264:30:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2264:30:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2314:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2325:2:4",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2310:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2310:18:4"
                      },
                      {
                        "hexValue": "6e6f742077686974656c6973746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2330:17:4",
                        "type": "",
                        "value": "not whitelisted"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2303:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2303:45:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2303:45:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2357:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2369:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2380:2:4",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2365:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2365:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2357:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_d96f2989eb5366a2905d499fc08724de9f6dbe8a3b2a754fa8cdb243a7c2bb16__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2201:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2215:4:4",
                "type": ""
              }
            ],
            "src": "2050:339:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2568:181:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2585:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2596:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2578:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2578:21:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2578:21:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2619:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2630:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2615:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2615:18:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2635:2:4",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2608:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2608:30:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2608:30:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2658:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2669:2:4",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2654:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2654:18:4"
                      },
                      {
                        "hexValue": "596f752063616e277420636c61696d20796f757220746f6b656e7320796574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2674:33:4",
                        "type": "",
                        "value": "You can't claim your tokens yet"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2647:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2647:61:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2647:61:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2717:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2729:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2740:2:4",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2725:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2725:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2717:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4b10657adbe48af7bb3398a4362f430f905c09935269bcaa5227daa5cfd8f927__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2545:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2559:4:4",
                "type": ""
              }
            ],
            "src": "2394:355:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2928:174:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2945:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2956:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2938:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2938:21:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2938:21:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2979:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2990:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2975:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2975:18:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2995:2:4",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2968:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2968:30:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2968:30:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3018:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3029:2:4",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3014:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3014:18:4"
                      },
                      {
                        "hexValue": "4e6f2070726573616c652070617274696369706174696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3034:26:4",
                        "type": "",
                        "value": "No presale participation"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3007:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3007:54:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3007:54:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3070:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3082:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3093:2:4",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3078:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3078:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3070:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ec67113696557d0d40edc5e608972c2520f41dc3cd8c27689d5037424c32a86a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2905:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2919:4:4",
                "type": ""
              }
            ],
            "src": "2754:348:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3139:95:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3156:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3163:3:4",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3168:10:4",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3159:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3159:20:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3149:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3149:31:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3149:31:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3196:1:4",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3199:4:4",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3189:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3189:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3189:15:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3220:1:4",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3223:4:4",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3213:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3213:15:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3213:15:4"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "3107:127:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3287:77:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3297:16:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3308:1:4"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "3311:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3304:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3304:9:4"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "3297:3:4"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3336:22:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "3338:16:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3338:18:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3338:18:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "3328:1:4"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "3331:3:4"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3325:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3325:10:4"
                  },
                  "nodeType": "YulIf",
                  "src": "3322:36:4"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "3270:1:4",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "3273:1:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "3279:3:4",
                "type": ""
              }
            ],
            "src": "3239:125:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3498:145:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3508:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3520:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3531:2:4",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3516:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3516:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3508:4:4"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3550:9:4"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3565:6:4"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3581:3:4",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3586:1:4",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3577:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3577:11:4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3590:1:4",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3573:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3573:19:4"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3561:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3561:32:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3543:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3543:51:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3543:51:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3614:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3625:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3610:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3610:18:4"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "3630:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3603:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3603:34:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3603:34:4"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3459:9:4",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3470:6:4",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3478:6:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3489:4:4",
                "type": ""
              }
            ],
            "src": "3369:274:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3726:199:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3772:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3781:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3784:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3774:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3774:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3774:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3747:7:4"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3756:9:4"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3743:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3743:23:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3768:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3739:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3739:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "3736:52:4"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3797:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3816:9:4"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3810:5:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3810:16:4"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3801:5:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3879:16:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3888:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3891:1:4",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3881:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3881:12:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3881:12:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3848:5:4"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "3869:5:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3862:6:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3862:13:4"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "3855:6:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3855:21:4"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3845:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3845:32:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3838:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3838:40:4"
                  },
                  "nodeType": "YulIf",
                  "src": "3835:60:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3904:15:4",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3914:5:4"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3904:6:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3692:9:4",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3703:7:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3715:6:4",
                "type": ""
              }
            ],
            "src": "3648:277:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4104:173:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4121:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4132:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4114:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4114:21:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4114:21:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4155:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4166:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4151:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4151:18:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4171:2:4",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4144:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4144:30:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4144:30:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4194:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4205:2:4",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4190:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4190:18:4"
                      },
                      {
                        "hexValue": "446973747269627574696f6e2063616e74207374617274",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4210:25:4",
                        "type": "",
                        "value": "Distribution cant start"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4183:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4183:53:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4183:53:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4245:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4257:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4268:2:4",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4253:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4253:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4245:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5e76f9ed9a00dd44d06564b55f70b8f8374ceddb88148a8a1fc02959178570e0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4081:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4095:4:4",
                "type": ""
              }
            ],
            "src": "3930:347:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4456:169:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4473:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4484:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4466:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4466:21:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4466:21:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4507:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4518:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4503:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4503:18:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4523:2:4",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4496:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4496:30:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4496:30:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4546:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4557:2:4",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4542:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4542:18:4"
                      },
                      {
                        "hexValue": "49636f2063616e2774207374617274206e6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4562:21:4",
                        "type": "",
                        "value": "Ico can't start now"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4535:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4535:49:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4535:49:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4593:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4605:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4616:2:4",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4601:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4601:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4593:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_63886002eebd3e2f8e0e11efa862b6581e91303c008b5625926978c07f71df49__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4433:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4447:4:4",
                "type": ""
              }
            ],
            "src": "4282:343:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4679:79:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4689:17:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4701:1:4"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4704:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "4697:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4697:9:4"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "4689:4:4"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4730:22:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "4732:16:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4732:18:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4732:18:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "4721:4:4"
                      },
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4727:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "4718:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4718:11:4"
                  },
                  "nodeType": "YulIf",
                  "src": "4715:37:4"
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4661:1:4",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4664:1:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "4670:4:4",
                "type": ""
              }
            ],
            "src": "4630:128:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4809:171:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4840:111:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4861:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4868:3:4",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "4873:10:4",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "4864:3:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "4864:20:4"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4854:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4854:31:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4854:31:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4905:1:4",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4908:4:4",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "4898:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4898:15:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4898:15:4"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4933:1:4",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4936:4:4",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4926:6:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4926:15:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4926:15:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4829:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4822:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4822:9:4"
                  },
                  "nodeType": "YulIf",
                  "src": "4819:132:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4960:14:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4969:1:4"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4972:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "4965:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4965:9:4"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "4960:1:4"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4794:1:4",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4797:1:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "4803:1:4",
                "type": ""
              }
            ],
            "src": "4763:217:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5037:116:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5047:20:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5062:1:4"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5065:1:4"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "5058:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5058:9:4"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "5047:7:4"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5125:22:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5127:16:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5127:18:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5127:18:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "5096:1:4"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "5089:6:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5089:9:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "5103:1:4"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "product",
                                    "nodeType": "YulIdentifier",
                                    "src": "5110:7:4"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "5119:1:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "5106:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5106:15:4"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "5100:2:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5100:22:4"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "5086:2:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5086:37:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5079:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5079:45:4"
                  },
                  "nodeType": "YulIf",
                  "src": "5076:71:4"
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5016:1:4",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5019:1:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "5025:7:4",
                "type": ""
              }
            ],
            "src": "4985:168:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5332:173:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5349:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5360:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5342:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5342:21:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5342:21:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5383:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5394:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5379:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5379:18:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5399:2:4",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5372:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5372:30:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5372:30:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5422:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5433:2:4",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5418:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5418:18:4"
                      },
                      {
                        "hexValue": "43616e277420756e7768696c6973742061646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5438:25:4",
                        "type": "",
                        "value": "Can't unwhilist address"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5411:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5411:53:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5411:53:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5473:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5485:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5496:2:4",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5481:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5481:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5473:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_787a76c391507049a0b72c89f7014aa55c23fa9cf2fda4de17759af7b6b3fa53__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5309:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5323:4:4",
                "type": ""
              }
            ],
            "src": "5158:347:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5701:14:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5703:10:4",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "5710:3:4"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5703:3:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5685:3:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "5693:3:4",
                "type": ""
              }
            ],
            "src": "5510:205:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5894:171:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5911:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5922:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5904:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5904:21:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5904:21:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5945:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5956:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5941:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5941:18:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5961:2:4",
                        "type": "",
                        "value": "21"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5934:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5934:30:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5934:30:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5984:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5995:2:4",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5980:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5980:18:4"
                      },
                      {
                        "hexValue": "455448203a207472616e73666572206661696c6564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6000:23:4",
                        "type": "",
                        "value": "ETH : transfer failed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5973:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5973:51:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5973:51:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6033:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6045:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6056:2:4",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6041:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6041:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6033:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_169de7783957feee896b0b87b5ac2ef1d804ec54b328f74ce0a44e0340412274__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5871:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5885:4:4",
                "type": ""
              }
            ],
            "src": "5720:345:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6244:227:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6261:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6272:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6254:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6254:21:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6254:21:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6295:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6306:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6291:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6291:18:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6311:2:4",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6284:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6284:30:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6284:30:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6334:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6345:2:4",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6330:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6330:18:4"
                      },
                      {
                        "hexValue": "49434f206861736e2774207374617274656420796574206f722069732066696e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6350:34:4",
                        "type": "",
                        "value": "ICO hasn't started yet or is fin"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6323:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6323:62:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6323:62:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6405:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6416:2:4",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6401:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6401:18:4"
                      },
                      {
                        "hexValue": "6973686564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6421:7:4",
                        "type": "",
                        "value": "ished"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6394:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6394:35:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6394:35:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6438:27:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6450:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6461:3:4",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6446:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6446:19:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6438:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_616d3d12f94a50a97089113e04b908882cc1e87f4f76165e6e6a5862bef057ff__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6221:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6235:4:4",
                "type": ""
              }
            ],
            "src": "6070:401:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6650:173:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6667:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6678:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6660:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6660:21:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6660:21:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6701:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6712:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6697:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6697:18:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6717:2:4",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6690:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6690:30:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6690:30:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6740:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6751:2:4",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6736:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6736:18:4"
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820636f6e747269627574696f6e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6756:25:4",
                        "type": "",
                        "value": "Not enough contribution"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6729:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6729:53:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6729:53:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6791:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6803:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6814:2:4",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6799:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6799:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6791:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4e13d745d3c74e170ae5b2dec6c6fd10ed57f6170165ffbcde10bed24fbb5953__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6627:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6641:4:4",
                "type": ""
              }
            ],
            "src": "6476:347:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7002:169:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7019:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7030:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7012:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7012:21:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7012:21:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7053:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7064:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7049:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7049:18:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7069:2:4",
                        "type": "",
                        "value": "19"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7042:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7042:30:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7042:30:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7092:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7103:2:4",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7088:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7088:18:4"
                      },
                      {
                        "hexValue": "796f752072656163686564206d617820636170",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7108:21:4",
                        "type": "",
                        "value": "you reached max cap"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7081:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7081:49:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7081:49:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7139:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7151:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7162:2:4",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7147:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7147:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7139:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_957dd28320790a3de837a78ce288f3467e5e6ef72897e2ea732987d07cb38ae3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6979:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6993:4:4",
                "type": ""
              }
            ],
            "src": "6828:343:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7350:225:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7367:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7378:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7360:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7360:21:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7360:21:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7401:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7412:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7397:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7397:18:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7417:2:4",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7390:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7390:30:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7390:30:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7440:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7451:2:4",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7436:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7436:18:4"
                      },
                      {
                        "hexValue": "6d61784361702069732072656163686564206f7220616c6d6f73742072656163",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7456:34:4",
                        "type": "",
                        "value": "maxCap is reached or almost reac"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7429:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7429:62:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7429:62:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7511:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7522:2:4",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7507:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7507:18:4"
                      },
                      {
                        "hexValue": "686564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7527:5:4",
                        "type": "",
                        "value": "hed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7500:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7500:33:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7500:33:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7542:27:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7554:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7565:3:4",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7550:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7550:19:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7542:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7d8256af3160d828ce6f4692e446e39a5c1f89fa31373d0c2534154cff1cb97d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7327:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7341:4:4",
                "type": ""
              }
            ],
            "src": "7176:399:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7754:167:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7771:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7782:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7764:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7764:21:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7764:21:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7805:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7816:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7801:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7801:18:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7821:2:4",
                        "type": "",
                        "value": "17"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7794:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7794:30:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7794:30:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7844:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7855:2:4",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7840:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7840:18:4"
                      },
                      {
                        "hexValue": "49636f2063616e277420656e64206e6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7860:19:4",
                        "type": "",
                        "value": "Ico can't end now"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7833:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7833:47:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7833:47:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7889:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7901:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7912:2:4",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7897:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7897:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7889:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_4a9dc4013f2c1bad2089c8f22f1c3db15d58726264d1538cb3e25fb94f52f34d__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7731:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7745:4:4",
                "type": ""
              }
            ],
            "src": "7580:341:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8100:228:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8117:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8128:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8110:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8110:21:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8110:21:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8151:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8162:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8147:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8147:18:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8167:2:4",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8140:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8140:30:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8140:30:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8190:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8201:2:4",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8186:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8186:18:4"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8206:34:4",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8179:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8179:62:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8179:62:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8261:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8272:2:4",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8257:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8257:18:4"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8277:8:4",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8250:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8250:36:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8250:36:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8295:27:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8307:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8318:3:4",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8303:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8303:19:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8295:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8077:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8091:4:4",
                "type": ""
              }
            ],
            "src": "7926:402:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8507:182:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8524:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8535:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8517:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8517:21:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8517:21:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8558:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8569:2:4",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8554:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8554:18:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8574:2:4",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8547:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8547:30:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8547:30:4"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8597:9:4"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8608:2:4",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8593:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8593:18:4"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8613:34:4",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8586:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8586:62:4"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8586:62:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8657:26:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8669:9:4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8680:2:4",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8665:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8665:18:4"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8657:4:4"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8484:9:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8498:4:4",
                "type": ""
              }
            ],
            "src": "8333:356:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8758:358:4",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8768:16:4",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "8783:1:4",
                    "type": "",
                    "value": "1"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "8772:7:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8793:16:4",
                  "value": {
                    "name": "power_1",
                    "nodeType": "YulIdentifier",
                    "src": "8802:7:4"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "8793:5:4"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8818:13:4",
                  "value": {
                    "name": "_base",
                    "nodeType": "YulIdentifier",
                    "src": "8826:5:4"
                  },
                  "variableNames": [
                    {
                      "name": "base",
                      "nodeType": "YulIdentifier",
                      "src": "8818:4:4"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8882:228:4",
                    "statements": [
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8927:22:4",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [],
                                "functionName": {
                                  "name": "panic_error_0x11",
                                  "nodeType": "YulIdentifier",
                                  "src": "8929:16:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8929:18:4"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8929:18:4"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "8902:4:4"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "8916:1:4",
                                      "type": "",
                                      "value": "0"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "not",
                                    "nodeType": "YulIdentifier",
                                    "src": "8912:3:4"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "8912:6:4"
                                },
                                {
                                  "name": "base",
                                  "nodeType": "YulIdentifier",
                                  "src": "8920:4:4"
                                }
                              ],
                              "functionName": {
                                "name": "div",
                                "nodeType": "YulIdentifier",
                                "src": "8908:3:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "8908:17:4"
                            }
                          ],
                          "functionName": {
                            "name": "gt",
                            "nodeType": "YulIdentifier",
                            "src": "8899:2:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8899:27:4"
                        },
                        "nodeType": "YulIf",
                        "src": "8896:53:4"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8988:29:4",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8990:25:4",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "power",
                                    "nodeType": "YulIdentifier",
                                    "src": "9003:5:4"
                                  },
                                  {
                                    "name": "base",
                                    "nodeType": "YulIdentifier",
                                    "src": "9010:4:4"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "8999:3:4"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8999:16:4"
                              },
                              "variableNames": [
                                {
                                  "name": "power",
                                  "nodeType": "YulIdentifier",
                                  "src": "8990:5:4"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "8969:8:4"
                            },
                            {
                              "name": "power_1",
                              "nodeType": "YulIdentifier",
                              "src": "8979:7:4"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "8965:3:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8965:22:4"
                        },
                        "nodeType": "YulIf",
                        "src": "8962:55:4"
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9030:23:4",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "9042:4:4"
                            },
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "9048:4:4"
                            }
                          ],
                          "functionName": {
                            "name": "mul",
                            "nodeType": "YulIdentifier",
                            "src": "9038:3:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9038:15:4"
                        },
                        "variableNames": [
                          {
                            "name": "base",
                            "nodeType": "YulIdentifier",
                            "src": "9030:4:4"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "9066:34:4",
                        "value": {
                          "arguments": [
                            {
                              "name": "power_1",
                              "nodeType": "YulIdentifier",
                              "src": "9082:7:4"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "9091:8:4"
                            }
                          ],
                          "functionName": {
                            "name": "shr",
                            "nodeType": "YulIdentifier",
                            "src": "9078:3:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9078:22:4"
                        },
                        "variableNames": [
                          {
                            "name": "exponent",
                            "nodeType": "YulIdentifier",
                            "src": "9066:8:4"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "8851:8:4"
                      },
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "8861:7:4"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "8848:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8848:21:4"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "8870:3:4",
                    "statements": []
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "8844:3:4",
                    "statements": []
                  },
                  "src": "8840:270:4"
                }
              ]
            },
            "name": "checked_exp_helper",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "_base",
                "nodeType": "YulTypedName",
                "src": "8722:5:4",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "8729:8:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "8742:5:4",
                "type": ""
              },
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "8749:4:4",
                "type": ""
              }
            ],
            "src": "8694:422:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9180:747:4",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9218:52:4",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9232:10:4",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "9241:1:4",
                          "type": "",
                          "value": "1"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "9232:5:4"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "9255:5:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "9200:8:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9193:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9193:16:4"
                  },
                  "nodeType": "YulIf",
                  "src": "9190:80:4"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9303:52:4",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9317:10:4",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "9326:1:4",
                          "type": "",
                          "value": "0"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "9317:5:4"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "9340:5:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "9289:4:4"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "9282:6:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9282:12:4"
                  },
                  "nodeType": "YulIf",
                  "src": "9279:76:4"
                },
                {
                  "cases": [
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "9391:52:4",
                        "statements": [
                          {
                            "nodeType": "YulAssignment",
                            "src": "9405:10:4",
                            "value": {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9414:1:4",
                              "type": "",
                              "value": "1"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "9405:5:4"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "9428:5:4"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "9384:59:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9389:1:4",
                        "type": "",
                        "value": "1"
                      }
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "9459:123:4",
                        "statements": [
                          {
                            "body": {
                              "nodeType": "YulBlock",
                              "src": "9494:22:4",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "panic_error_0x11",
                                      "nodeType": "YulIdentifier",
                                      "src": "9496:16:4"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9496:18:4"
                                  },
                                  "nodeType": "YulExpressionStatement",
                                  "src": "9496:18:4"
                                }
                              ]
                            },
                            "condition": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "9479:8:4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9489:3:4",
                                  "type": "",
                                  "value": "255"
                                }
                              ],
                              "functionName": {
                                "name": "gt",
                                "nodeType": "YulIdentifier",
                                "src": "9476:2:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9476:17:4"
                            },
                            "nodeType": "YulIf",
                            "src": "9473:43:4"
                          },
                          {
                            "nodeType": "YulAssignment",
                            "src": "9529:25:4",
                            "value": {
                              "arguments": [
                                {
                                  "name": "exponent",
                                  "nodeType": "YulIdentifier",
                                  "src": "9542:8:4"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "9552:1:4",
                                  "type": "",
                                  "value": "1"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "9538:3:4"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "9538:16:4"
                            },
                            "variableNames": [
                              {
                                "name": "power",
                                "nodeType": "YulIdentifier",
                                "src": "9529:5:4"
                              }
                            ]
                          },
                          {
                            "nodeType": "YulLeave",
                            "src": "9567:5:4"
                          }
                        ]
                      },
                      "nodeType": "YulCase",
                      "src": "9452:130:4",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9457:1:4",
                        "type": "",
                        "value": "2"
                      }
                    }
                  ],
                  "expression": {
                    "name": "base",
                    "nodeType": "YulIdentifier",
                    "src": "9371:4:4"
                  },
                  "nodeType": "YulSwitch",
                  "src": "9364:218:4"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9680:70:4",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "9694:28:4",
                        "value": {
                          "arguments": [
                            {
                              "name": "base",
                              "nodeType": "YulIdentifier",
                              "src": "9707:4:4"
                            },
                            {
                              "name": "exponent",
                              "nodeType": "YulIdentifier",
                              "src": "9713:8:4"
                            }
                          ],
                          "functionName": {
                            "name": "exp",
                            "nodeType": "YulIdentifier",
                            "src": "9703:3:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9703:19:4"
                        },
                        "variableNames": [
                          {
                            "name": "power",
                            "nodeType": "YulIdentifier",
                            "src": "9694:5:4"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulLeave",
                        "src": "9735:5:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "9604:4:4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9610:2:4",
                                "type": "",
                                "value": "11"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "9601:2:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9601:12:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "9618:8:4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9628:2:4",
                                "type": "",
                                "value": "78"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "9615:2:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9615:16:4"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9597:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9597:35:4"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "base",
                                "nodeType": "YulIdentifier",
                                "src": "9641:4:4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9647:3:4",
                                "type": "",
                                "value": "307"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "9638:2:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9638:13:4"
                          },
                          {
                            "arguments": [
                              {
                                "name": "exponent",
                                "nodeType": "YulIdentifier",
                                "src": "9656:8:4"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9666:2:4",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "lt",
                              "nodeType": "YulIdentifier",
                              "src": "9653:2:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9653:16:4"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9634:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9634:36:4"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "9594:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9594:77:4"
                  },
                  "nodeType": "YulIf",
                  "src": "9591:159:4"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9759:57:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "9801:4:4"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "9807:8:4"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_helper",
                      "nodeType": "YulIdentifier",
                      "src": "9782:18:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9782:34:4"
                  },
                  "variables": [
                    {
                      "name": "power_1",
                      "nodeType": "YulTypedName",
                      "src": "9763:7:4",
                      "type": ""
                    },
                    {
                      "name": "base_1",
                      "nodeType": "YulTypedName",
                      "src": "9772:6:4",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9861:22:4",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "9863:16:4"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9863:18:4"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9863:18:4"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "9831:7:4"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9848:1:4",
                                "type": "",
                                "value": "0"
                              }
                            ],
                            "functionName": {
                              "name": "not",
                              "nodeType": "YulIdentifier",
                              "src": "9844:3:4"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9844:6:4"
                          },
                          {
                            "name": "base_1",
                            "nodeType": "YulIdentifier",
                            "src": "9852:6:4"
                          }
                        ],
                        "functionName": {
                          "name": "div",
                          "nodeType": "YulIdentifier",
                          "src": "9840:3:4"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9840:19:4"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9828:2:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9828:32:4"
                  },
                  "nodeType": "YulIf",
                  "src": "9825:58:4"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9892:29:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "power_1",
                        "nodeType": "YulIdentifier",
                        "src": "9905:7:4"
                      },
                      {
                        "name": "base_1",
                        "nodeType": "YulIdentifier",
                        "src": "9914:6:4"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "9901:3:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9901:20:4"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "9892:5:4"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_unsigned",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "9151:4:4",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "9157:8:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "9170:5:4",
                "type": ""
              }
            ],
            "src": "9121:806:4"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10002:61:4",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10012:45:4",
                  "value": {
                    "arguments": [
                      {
                        "name": "base",
                        "nodeType": "YulIdentifier",
                        "src": "10042:4:4"
                      },
                      {
                        "name": "exponent",
                        "nodeType": "YulIdentifier",
                        "src": "10048:8:4"
                      }
                    ],
                    "functionName": {
                      "name": "checked_exp_unsigned",
                      "nodeType": "YulIdentifier",
                      "src": "10021:20:4"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10021:36:4"
                  },
                  "variableNames": [
                    {
                      "name": "power",
                      "nodeType": "YulIdentifier",
                      "src": "10012:5:4"
                    }
                  ]
                }
              ]
            },
            "name": "checked_exp_t_uint256_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "base",
                "nodeType": "YulTypedName",
                "src": "9973:4:4",
                "type": ""
              },
              {
                "name": "exponent",
                "nodeType": "YulTypedName",
                "src": "9979:8:4",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "power",
                "nodeType": "YulTypedName",
                "src": "9992:5:4",
                "type": ""
              }
            ],
            "src": "9932:131:4"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function panic_error_0x21()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_enum$_WorkflowStatus_$45__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        if iszero(lt(value0, 4))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x21)\n            revert(0, 0x24)\n        }\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bool_t_uint256_t_uint256__to_t_bool_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, iszero(iszero(value0)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_stringliteral_c796f88cf3a68ae0c13fb33f5e1c80ee45cd1567c7bd20bb6f937aff6489fa21__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Can't list more addresses\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_d96f2989eb5366a2905d499fc08724de9f6dbe8a3b2a754fa8cdb243a7c2bb16__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"not whitelisted\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4b10657adbe48af7bb3398a4362f430f905c09935269bcaa5227daa5cfd8f927__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"You can't claim your tokens yet\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ec67113696557d0d40edc5e608972c2520f41dc3cd8c27689d5037424c32a86a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"No presale participation\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_5e76f9ed9a00dd44d06564b55f70b8f8374ceddb88148a8a1fc02959178570e0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Distribution cant start\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_63886002eebd3e2f8e0e11efa862b6581e91303c008b5625926978c07f71df49__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Ico can't start now\")\n        tail := add(headStart, 96)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_787a76c391507049a0b72c89f7014aa55c23fa9cf2fda4de17759af7b6b3fa53__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Can't unwhilist address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos) -> end\n    { end := pos }\n    function abi_encode_tuple_t_stringliteral_169de7783957feee896b0b87b5ac2ef1d804ec54b328f74ce0a44e0340412274__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"ETH : transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_616d3d12f94a50a97089113e04b908882cc1e87f4f76165e6e6a5862bef057ff__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ICO hasn't started yet or is fin\")\n        mstore(add(headStart, 96), \"ished\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4e13d745d3c74e170ae5b2dec6c6fd10ed57f6170165ffbcde10bed24fbb5953__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Not enough contribution\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_957dd28320790a3de837a78ce288f3467e5e6ef72897e2ea732987d07cb38ae3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"you reached max cap\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7d8256af3160d828ce6f4692e446e39a5c1f89fa31373d0c2534154cff1cb97d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"maxCap is reached or almost reac\")\n        mstore(add(headStart, 96), \"hed\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4a9dc4013f2c1bad2089c8f22f1c3db15d58726264d1538cb3e25fb94f52f34d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Ico can't end now\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function checked_exp_helper(_base, exponent) -> power, base\n    {\n        let power_1 := 1\n        power := power_1\n        base := _base\n        for { } gt(exponent, power_1) { }\n        {\n            if gt(base, div(not(0), base)) { panic_error_0x11() }\n            if and(exponent, power_1) { power := mul(power, base) }\n            base := mul(base, base)\n            exponent := shr(power_1, exponent)\n        }\n    }\n    function checked_exp_unsigned(base, exponent) -> power\n    {\n        if iszero(exponent)\n        {\n            power := 1\n            leave\n        }\n        if iszero(base)\n        {\n            power := 0\n            leave\n        }\n        switch base\n        case 1 {\n            power := 1\n            leave\n        }\n        case 2 {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := shl(exponent, 1)\n            leave\n        }\n        if or(and(lt(base, 11), lt(exponent, 78)), and(lt(base, 307), lt(exponent, 32)))\n        {\n            power := exp(base, exponent)\n            leave\n        }\n        let power_1, base_1 := checked_exp_helper(base, exponent)\n        if gt(power_1, div(not(0), base_1)) { panic_error_0x11() }\n        power := mul(power_1, base_1)\n    }\n    function checked_exp_t_uint256_t_uint256(base, exponent) -> power\n    {\n        power := checked_exp_unsigned(base, exponent)\n    }\n}",
      "id": 4,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "208:6586:0:-:0;;;1271:657;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:1;719:10:3;936:18:1;:32::i;:::-;1584:3:0;:25;;-1:-1:-1;;;;;;1584:25:0;-1:-1:-1;;;;;1584:25:0;;;;;1620:8;:20;;;1663:17;1669:10;1663:5;:17::i;:::-;1651:9;:29;1704:17;1710:10;1704:5;:17::i;:::-;1692:9;:29;1732:12;:28;;;1781:14;1787:7;1781:5;:14::i;:::-;1772:6;:23;1807:12;:28;;-1:-1:-1;;;;;;1807:28:0;-1:-1:-1;;;;;1807:28:0;;;;;;;;;;;1847:15;:34;-1:-1:-1;;;1892:12:0;:28;;;;-1:-1:-1;208:6586:0;;-1:-1:-1;;208:6586:0;2433:187:1;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:1;;;-1:-1:-1;;;;;;2541:17:1;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;2353:101:0:-;2404:4;2438:8;;2434:2;:12;;;;:::i;:::-;2427:19;;:6;:19;:::i;:::-;2420:26;2353:101;-1:-1:-1;;2353:101:0:o;14:177:4:-;93:13;;-1:-1:-1;;;;;135:31:4;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:726::-;338:6;346;354;362;370;378;386;394;402;455:3;443:9;434:7;430:23;426:33;423:53;;;472:1;469;462:12;423:53;495:40;525:9;495:40;:::i;:::-;485:50;;554:49;599:2;588:9;584:18;554:49;:::i;:::-;544:59;;643:2;632:9;628:18;622:25;612:35;;687:2;676:9;672:18;666:25;656:35;;731:3;720:9;716:19;710:26;700:36;;776:3;765:9;761:19;755:26;745:36;;821:3;810:9;806:19;800:26;790:36;;866:3;855:9;851:19;845:26;835:36;;911:3;900:9;896:19;890:26;880:36;;196:726;;;;;;;;;;;:::o;927:127::-;988:10;983:3;979:20;976:1;969:31;1019:4;1016:1;1009:15;1043:4;1040:1;1033:15;1059:422;1148:1;1191:5;1148:1;1205:270;1226:7;1216:8;1213:21;1205:270;;;1285:4;1281:1;1277:6;1273:17;1267:4;1264:27;1261:53;;;1294:18;;:::i;:::-;1344:7;1334:8;1330:22;1327:55;;;1364:16;;;;1327:55;1443:22;;;;1403:15;;;;1205:270;;;1209:3;1059:422;;;;;:::o;1486:806::-;1535:5;1565:8;1555:80;;-1:-1:-1;1606:1:4;1620:5;;1555:80;1654:4;1644:76;;-1:-1:-1;1691:1:4;1705:5;;1644:76;1736:4;1754:1;1749:59;;;;1822:1;1817:130;;;;1729:218;;1749:59;1779:1;1770:10;;1793:5;;;1817:130;1854:3;1844:8;1841:17;1838:43;;;1861:18;;:::i;:::-;-1:-1:-1;;1917:1:4;1903:16;;1932:5;;1729:218;;2031:2;2021:8;2018:16;2012:3;2006:4;2003:13;1999:36;1993:2;1983:8;1980:16;1975:2;1969:4;1966:12;1962:35;1959:77;1956:159;;;-1:-1:-1;2068:19:4;;;2100:5;;1956:159;2147:34;2172:8;2166:4;2147:34;:::i;:::-;2217:6;2213:1;2209:6;2205:19;2196:7;2193:32;2190:58;;;2228:18;;:::i;:::-;2266:20;;1486:806;-1:-1:-1;;;1486:806:4:o;2297:131::-;2357:5;2386:36;2413:8;2407:4;2386:36;:::i;:::-;2377:45;2297:131;-1:-1:-1;;;2297:131:4:o;2433:168::-;2506:9;;;2537;;2554:15;;;2548:22;;2534:37;2524:71;;2575:18;;:::i;2433:168::-;208:6586:0;;;;;;",
  "deployedSourceMap": "208:6586:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;444:29;;;;;;;;;;;;;;;;;;;160:25:4;;;148:2;133:18;444:29:0;;;;;;;;418:18;;;;;;;;;;;;;;;;329:24;;;;;;;;;;;;;;;;2504:224;;;;;;;;;;-1:-1:-1;2504:224:0;;;;;:::i;:::-;;:::i;:::-;;3829:454;;;;;;;;;;;;;:::i;361:21::-;;;;;;;;;;;;;;;;1831:101:1;;;;;;;;;;;;;:::i;6530:261:0:-;;;;;;;;;;;;;:::i;6134:199::-;;;;;;;;;;;;;:::i;4289:655::-;;;;;;;;;;-1:-1:-1;4289:655:0;;;;;:::i;:::-;;:::i;2734:224::-;;;;;;;;;;-1:-1:-1;2734:224:0;;;;;:::i;:::-;;:::i;1201:85:1:-;;;;;;;;;;-1:-1:-1;1247:7:1;1273:6;1201:85;;-1:-1:-1;;;;;1273:6:1;;;633:51:4;;621:2;606:18;1201:85:1;487:203:4;389:21:0;;;;;;;;;;;;;;;;5861:238;;;;;;;;;;;;;:::i;1172:36::-;;;;;;;;;;-1:-1:-1;1172:36:0;;;;-1:-1:-1;;;1172:36:0;;;;;;;;;;;;;:::i;5484:107::-;;;;;;;;;;-1:-1:-1;5484:107:0;;;;;:::i;:::-;;:::i;3125:660::-;;;:::i;1216:46::-;;;;;;;;;;-1:-1:-1;1216:46:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1583:14:4;;1576:22;1558:41;;1630:2;1615:18;;1608:34;;;;1658:18;;;1651:34;1546:2;1531:18;1216:46:0;1362:329:4;6339:185:0;;;;;;;;;;;;;:::i;5597:225::-;;;;;;;;;;;;;:::i;2081:198:1:-;;;;;;;;;;-1:-1:-1;2081:198:1;;;;;:::i;:::-;;:::i;2504:224:0:-;1094:13:1;:11;:13::i;:::-;2605:35:0::1;2587:14;::::0;-1:-1:-1;;;2587:14:0;::::1;;;:53;::::0;::::1;;;;;;:::i;:::-;;2578:92;;;::::0;-1:-1:-1;;;2578:92:0;;1898:2:4;2578:92:0::1;::::0;::::1;1880:21:4::0;1937:2;1917:18;;;1910:30;1976:27;1956:18;;;1949:55;2021:18;;2578:92:0::1;;;;;;;;;-1:-1:-1::0;;;;;2682:18:0::1;;::::0;;;:8:::1;:18;::::0;;;;:37;;-1:-1:-1;;2682:37:0::1;2715:4;2682:37;::::0;;2504:224::o;3829:454::-;2249:10;2240:20;;;;:8;:20;;;;;:32;;;2231:61;;;;-1:-1:-1;;;2231:61:0;;2252:2:4;2231:61:0;;;2234:21:4;2291:2;2271:18;;;2264:30;-1:-1:-1;;;2310:18:4;;;2303:45;2365:18;;2231:61:0;2050:339:4;2231:61:0;3915:32:::1;3897:14;::::0;-1:-1:-1;;;3897:14:0;::::1;;;:50;::::0;::::1;;;;;;:::i;:::-;;3888:95;;;::::0;-1:-1:-1;;;3888:95:0;;2596:2:4;3888:95:0::1;::::0;::::1;2578:21:4::0;2635:2;2615:18;;;2608:30;2674:33;2654:18;;;2647:61;2725:18;;3888:95:0::1;2394:355:4::0;3888:95:0::1;4012:10;4039:1;4003:20:::0;;;:8:::1;:20;::::0;;;;:33:::1;;::::0;3994:75:::1;;;::::0;-1:-1:-1;;;3994:75:0;;2956:2:4;3994:75:0::1;::::0;::::1;2938:21:4::0;2995:2;2975:18;;;2968:30;3034:26;3014:18;;;3007:54;3078:18;;3994:75:0::1;2754:348:4::0;3994:75:0::1;4081:14;4098:27;4114:10;4098:15;:27::i;:::-;4145:10;4136:20;::::0;;;:8:::1;:20;::::0;;;;:33:::1;;:46:::0;;4081:44;;-1:-1:-1;4081:44:0;;4136:33;;:20;:46:::1;::::0;4081:44;;4136:46:::1;:::i;:::-;::::0;;;-1:-1:-1;;4194:3:0::1;::::0;:35:::1;::::0;-1:-1:-1;;;4194:35:0;;4207:10:::1;4194:35;::::0;::::1;3543:51:4::0;3610:18;;;3603:34;;;-1:-1:-1;;;;;4194:3:0;;::::1;::::0;:12:::1;::::0;3516:18:4;;4194:35:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;4246:30:0::1;::::0;;4254:10:::1;3543:51:4::0;;3625:2;3610:18;;3603:34;;;4246:30:0::1;::::0;3516:18:4;4246:30:0::1;;;;;;;;3878:405;3829:454::o:0;1831:101:1:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;6530:261:0:-;1094:13:1;:11;:13::i;:::-;6621:25:0::1;6603:14;::::0;-1:-1:-1;;;6603:14:0;::::1;;;:43;::::0;::::1;;;;;;:::i;:::-;;6594:80;;;::::0;-1:-1:-1;;;6594:80:0;;4132:2:4;6594:80:0::1;::::0;::::1;4114:21:4::0;4171:2;4151:18;;;4144:30;4210:25;4190:18;;;4183:53;4253:18;;6594:80:0::1;3930:347:4::0;6594:80:0::1;6706:15;6684:19;:37:::0;6733:14:::1;:49:::0;;6750:32:::1;::::0;6733:14;-1:-1:-1;;;;6733:49:0::1;-1:-1:-1::0;;;6750:32:0;6733:49:::1;;;;;;6530:261::o:0;6134:199::-;1094:13:1;:11;:13::i;:::-;6211:35:0::1;6193:14;::::0;-1:-1:-1;;;6193:14:0;::::1;;;:53;::::0;::::1;;;;;;:::i;:::-;;6184:86;;;::::0;-1:-1:-1;;;6184:86:0;;4484:2:4;6184:86:0::1;::::0;::::1;4466:21:4::0;4523:2;4503:18;;;4496:30;-1:-1:-1;;;4542:18:4;;;4535:49;4601:18;;6184:86:0::1;4282:343:4::0;6184:86:0::1;6280:14;:44:::0;;6297:27:::1;::::0;6280:14;-1:-1:-1;;;;6280:44:0::1;-1:-1:-1::0;;;6297:27:0;6280:44:::1;::::0;4289:655;4354:4;4414:15;;4392:19;;:37;;;;:::i;:::-;4373:15;:56;4369:569;;-1:-1:-1;;;;;4499:18:0;;;;;;:8;:18;;;;;:31;;;;4452;;;;;:78;;4499:31;4452:78;:::i;:::-;4444:87;4289:655;-1:-1:-1;;4289:655:0:o;4369:569::-;4571:15;4607:19;;4589:15;:37;;;;:::i;:::-;4571:55;;4641:16;4673:12;;4660:10;:25;;;;:::i;:::-;4641:44;;4701:17;4735:12;;4721:11;:26;;;;:::i;:::-;4837:15;;-1:-1:-1;;;;;4788:18:0;;4763:22;4788:18;;;:8;:18;;;;;:31;;;4701:46;;-1:-1:-1;4763:22:0;4788:46;;4701;;4788;:::i;:::-;:64;;;;:::i;:::-;-1:-1:-1;;;;;4895:18:0;;;;;;:8;:18;;;;;:31;;;4763:89;;-1:-1:-1;4875:51:0;;4763:89;4875:51;:::i;:::-;4868:58;4289:655;-1:-1:-1;;;;;;4289:655:0:o;2734:224::-;1094:13:1;:11;:13::i;:::-;2838:35:0::1;2820:14;::::0;-1:-1:-1;;;2820:14:0;::::1;;;:53;::::0;::::1;;;;;;:::i;:::-;;2811:90;;;::::0;-1:-1:-1;;;2811:90:0;;5360:2:4;2811:90:0::1;::::0;::::1;5342:21:4::0;5399:2;5379:18;;;5372:30;5438:25;5418:18;;;5411:53;5481:18;;2811:90:0::1;5158:347:4::0;2811:90:0::1;-1:-1:-1::0;;;;;2911:18:0::1;2944:5;2911:18:::0;;;:8:::1;:18;::::0;;;;:38;;-1:-1:-1;;2911:38:0::1;::::0;;2734:224::o;5861:238::-;1094:13:1;:11;:13::i;:::-;5986:54:0::1;::::0;5937:21:::1;::::0;5914:20:::1;::::0;5994:10:::1;::::0;5937:21;;5914:20;5986:54;5914:20;5986:54;5937:21;5994:10;5986:54:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5970:70;;;6060:4;6051:39;;;::::0;-1:-1:-1;;;6051:39:0;;5922:2:4;6051:39:0::1;::::0;::::1;5904:21:4::0;5961:2;5941:18;;;5934:30;-1:-1:-1;;;5980:18:4;;;5973:51;6041:18;;6051:39:0::1;5720:345:4::0;6051:39:0::1;5904:195;;5861:238::o:0;5484:107::-;1094:13:1;:11;:13::i;:::-;5569::0::1;5575:6;5569:5;:13::i;:::-;5553;:29:::0;-1:-1:-1;5484:107:0:o;3125:660::-;2249:10;2240:20;;;;:8;:20;;;;;:32;;;2231:61;;;;-1:-1:-1;;;2231:61:0;;2252:2:4;2231:61:0;;;2234:21:4;2291:2;2271:18;;;2264:30;-1:-1:-1;;;2310:18:4;;;2303:45;2365:18;;2231:61:0;2050:339:4;2231:61:0;3217:27:::1;3199:14;::::0;-1:-1:-1;;;3199:14:0;::::1;;;:45;::::0;::::1;;;;;;:::i;:::-;;3190:96;;;::::0;-1:-1:-1;;;3190:96:0;;6272:2:4;3190:96:0::1;::::0;::::1;6254:21:4::0;6311:2;6291:18;;;6284:30;6350:34;6330:18;;;6323:62;-1:-1:-1;;;6401:18:4;;;6394:35;6446:19;;3190:96:0::1;6070:401:4::0;3190:96:0::1;3319:9;;3306;:22;;3297:59;;;::::0;-1:-1:-1;;;3297:59:0;;6678:2:4;3297:59:0::1;::::0;::::1;6660:21:4::0;6717:2;6697:18;;;6690:30;6756:25;6736:18;;;6729:53;6799:18;;3297:59:0::1;6476:347:4::0;3297:59:0::1;3422:12;::::0;3395:10:::1;3367:16;3386:20:::0;;;:8:::1;:20;::::0;;;;:33:::1;;::::0;3367:16;;3386:48:::1;::::0;::::1;:::i;:::-;3482:9;::::0;3367:67;;-1:-1:-1;3455:23:0::1;3367:67:::0;3455:9:::1;:23;:::i;:::-;:36;;3446:69;;;::::0;-1:-1:-1;;;3446:69:0;;7030:2:4;3446:69:0::1;::::0;::::1;7012:21:4::0;7069:2;7049:18;;;7042:30;-1:-1:-1;;;7088:18:4;;;7081:49;7147:18;;3446:69:0::1;6828:343:4::0;3446:69:0::1;3568:6;::::0;3547:17:::1;::::0;3535:29:::1;::::0;:9:::1;:29;:::i;:::-;:39;;3526:88;;;::::0;-1:-1:-1;;;3526:88:0;;7378:2:4;3526:88:0::1;::::0;::::1;7360:21:4::0;7417:2;7397:18;;;7390:30;7456:34;7436:18;;;7429:62;-1:-1:-1;;;7507:18:4;;;7500:33;7550:19;;3526:88:0::1;7176:399:4::0;3526:88:0::1;3647:9;3626:17;;:30;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;3717:12:0::1;::::0;3705:24:::1;::::0;:9:::1;:24;:::i;:::-;3677:10;3668:20;::::0;;;:8:::1;:20;::::0;;;;:33:::1;;:61:::0;;:33;;:20;:61:::1;::::0;;;::::1;:::i;:::-;::::0;;;-1:-1:-1;;3746:31:0::1;::::0;;3755:10:::1;3543:51:4::0;;3767:9:0::1;3625:2:4::0;3610:18;;3603:34;3746:31:0::1;::::0;3516:18:4;3746:31:0::1;3369:274:4::0;6339:185:0;1094:13:1;:11;:13::i;:::-;6414:27:0::1;6396:14;::::0;-1:-1:-1;;;6396:14:0;::::1;;;:45;::::0;::::1;;;;;;:::i;:::-;;6387:76;;;::::0;-1:-1:-1;;;6387:76:0;;7782:2:4;6387:76:0::1;::::0;::::1;7764:21:4::0;7821:2;7801:18;;;7794:30;-1:-1:-1;;;7840:18:4;;;7833:47;7897:18;;6387:76:0::1;7580:341:4::0;6387:76:0::1;6473:14;:42:::0;;6490:25:::1;::::0;6473:14;-1:-1:-1;;;;6473:42:0::1;-1:-1:-1::0;;;6490:25:0;6473:42:::1;::::0;5597:225;1094:13:1;:11;:13::i;:::-;5656:17:0::1;5696:12;;5676:17;;:32;;;;:::i;:::-;5656:52;;5719:14;5752:12;5736:13;;:28;;;;:::i;:::-;5776:3;::::0;5789:12:::1;::::0;5776:37:::1;::::0;-1:-1:-1;;;5776:37:0;;-1:-1:-1;;;;;5789:12:0;;::::1;5776:37;::::0;::::1;3543:51:4::0;3610:18;;;3603:34;;;5719:45:0;;-1:-1:-1;5776:3:0::1;::::0;:12:::1;::::0;3516:18:4;;5776:37:0::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5646:176;;5597:225::o:0;2081:198:1:-;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:1;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:1;;8128:2:4;2161:73:1::1;::::0;::::1;8110:21:4::0;8167:2;8147:18;;;8140:30;8206:34;8186:18;;;8179:62;-1:-1:-1;;;8257:18:4;;;8250:36;8303:19;;2161:73:1::1;7926:402:4::0;2161:73:1::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:1;719:10:3;1422:23:1;1414:68;;;;-1:-1:-1;;;1414:68:1;;8535:2:4;1414:68:1;;;8517:21:4;;;8554:18;;;8547:30;8613:34;8593:18;;;8586:62;8665:18;;1414:68:1;8333:356:4;2433:187:1;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:1;;;-1:-1:-1;;;;;;2541:17:1;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;2353:101:0:-;2404:4;2438:8;;2434:2;:12;;;;:::i;:::-;2427:19;;:6;:19;:::i;196:286:4:-;255:6;308:2;296:9;287:7;283:23;279:32;276:52;;;324:1;321;314:12;276:52;350:23;;-1:-1:-1;;;;;402:31:4;;392:42;;382:70;;448:1;445;438:12;382:70;471:5;196:286;-1:-1:-1;;;196:286:4:o;695:127::-;756:10;751:3;747:20;744:1;737:31;787:4;784:1;777:15;811:4;808:1;801:15;827:345;976:2;961:18;;1009:1;998:13;;988:144;;1054:10;1049:3;1045:20;1042:1;1035:31;1089:4;1086:1;1079:15;1117:4;1114:1;1107:15;988:144;1141:25;;;827:345;:::o;1177:180::-;1236:6;1289:2;1277:9;1268:7;1264:23;1260:32;1257:52;;;1305:1;1302;1295:12;1257:52;-1:-1:-1;1328:23:4;;1177:180;-1:-1:-1;1177:180:4:o;3107:127::-;3168:10;3163:3;3159:20;3156:1;3149:31;3199:4;3196:1;3189:15;3223:4;3220:1;3213:15;3239:125;3304:9;;;3325:10;;;3322:36;;;3338:18;;:::i;3648:277::-;3715:6;3768:2;3756:9;3747:7;3743:23;3739:32;3736:52;;;3784:1;3781;3774:12;3736:52;3816:9;3810:16;3869:5;3862:13;3855:21;3848:5;3845:32;3835:60;;3891:1;3888;3881:12;4630:128;4697:9;;;4718:11;;;4715:37;;;4732:18;;:::i;4763:217::-;4803:1;4829;4819:132;;4873:10;4868:3;4864:20;4861:1;4854:31;4908:4;4905:1;4898:15;4936:4;4933:1;4926:15;4819:132;-1:-1:-1;4965:9:4;;4763:217::o;4985:168::-;5058:9;;;5089;;5106:15;;;5100:22;;5086:37;5076:71;;5127:18;;:::i;8694:422::-;8783:1;8826:5;8783:1;8840:270;8861:7;8851:8;8848:21;8840:270;;;8920:4;8916:1;8912:6;8908:17;8902:4;8899:27;8896:53;;;8929:18;;:::i;:::-;8979:7;8969:8;8965:22;8962:55;;;8999:16;;;;8962:55;9078:22;;;;9038:15;;;;8840:270;;;8844:3;8694:422;;;;;:::o;9121:806::-;9170:5;9200:8;9190:80;;-1:-1:-1;9241:1:4;9255:5;;9190:80;9289:4;9279:76;;-1:-1:-1;9326:1:4;9340:5;;9279:76;9371:4;9389:1;9384:59;;;;9457:1;9452:130;;;;9364:218;;9384:59;9414:1;9405:10;;9428:5;;;9452:130;9489:3;9479:8;9476:17;9473:43;;;9496:18;;:::i;:::-;-1:-1:-1;;9552:1:4;9538:16;;9567:5;;9364:218;;9666:2;9656:8;9653:16;9647:3;9641:4;9638:13;9634:36;9628:2;9618:8;9615:16;9610:2;9604:4;9601:12;9597:35;9594:77;9591:159;;;-1:-1:-1;9703:19:4;;;9735:5;;9591:159;9782:34;9807:8;9801:4;9782:34;:::i;:::-;9852:6;9848:1;9844:6;9840:19;9831:7;9828:32;9825:58;;;9863:18;;:::i;:::-;9901:20;;9121:806;-1:-1:-1;;;9121:806:4:o;9932:131::-;9992:5;10021:36;10048:8;10042:4;10021:36;:::i",
  "source": "// SPDX-License-Identifier: GPL-3.0\n\npragma solidity 0.8.17;\n\nimport \"../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol\" ;\nimport \"../node_modules/@openzeppelin/contracts/access/Ownable.sol\" ; \n\ncontract ICO is Ownable {\n\n    IERC20 ttk ;\n    \n            // ::: ICO state variables :: // \n\n    uint decimals ; \n    uint public exchangeRate ; \n    uint public maxAmount ;\n    uint public minAmount ; \n    uint public maxCap ; \n    uint public totalContribution ; \n    /// will be needed in case of a withdrawal of the TTK tokens is needed\n    uint amountForSale ; \n\n            // ::: VESTING state variables ::: // \n\n    uint vestingStartingTime ; \n    uint vestingDuration ; \n    /// duration of a vesting step in seconds. 1 month here aka 4 weeks = 2419200 seconds\n    uint stepDuration ; \n\n    address multiSigAddr ; \n\n    struct userInfo {\n        bool whitelisted ; \n        /// amountBought also corresponds to the total amount of tokens to be vested\n        uint amountBought ; \n        uint totalClaimed ; \n    }\n\n    enum WorkflowStatus {\n        RegisteringAddresses,\n        IcoIsStarted,\n        IcoIsEnded, \n        StartDistribution\n    }\n\n    WorkflowStatus public workflowStatus ;\n\n    mapping (address => userInfo) public  UserInfo ; \n\n    constructor (\n            address ttkAddress, \n            address _multiSigAddr,\n            uint _decimals, \n            uint _minAmount,\n            uint _maxAmount,\n            uint _exchangeRate,\n            uint _maxCap,\n            uint _vestingDuration,\n            uint _stepDuration\n        ) {\n        ttk = IERC20 (ttkAddress) ;\n        decimals = _decimals ;\n        minAmount = toWei(_minAmount) ; \n        maxAmount = toWei(_maxAmount) ;\n        exchangeRate = _exchangeRate ; \n        maxCap = toWei(_maxCap) ; \n        multiSigAddr = _multiSigAddr ; \n        vestingDuration = _vestingDuration ;\n        stepDuration = _stepDuration ;\n    }\n    \n    event TokenPurchase (\n        address purchaser,\n        uint value\n    ) ;\n\n    event Claimed (\n        address claimer,\n        uint value\n    ) ;\n\n    event WorkflowStatusChange (\n        address emitter\n    ) ;\n\n    receive() external payable {}\n\n    modifier onlyWhitelisted () {\n        require (UserInfo[msg.sender].whitelisted, \"not whitelisted\") ;\n    _;\n    }\n\n        // ::: from Eth to Wei ::: // \n\n    function toWei (uint amount) private view returns (uint) {\n        return amount*10**decimals ;\n    }\n\n        // ::: WHITELIST ADDRESSESS ::: //\n\n    function whitelistAddress (address _address) external onlyOwner {\n        require (workflowStatus == WorkflowStatus.RegisteringAddresses, \"Can't list more addresses\") ; \n        UserInfo[_address].whitelisted = true ; \n    }\n\n    function removeFromWhitelist (address _address) external onlyOwner {\n        require (workflowStatus == WorkflowStatus.RegisteringAddresses, \"Can't unwhilist address\");\n        UserInfo[_address].whitelisted = false ; \n    }\n\n        // ::: BUY TOKENS ::: //\n\n    /// send tokens to the smart contract USING this function ///\n    /// there will be an input field for it on the front ///\n    function buyTokens () external payable onlyWhitelisted {\n        require (workflowStatus == WorkflowStatus.IcoIsStarted, \"ICO hasn't started yet or is finished\") ;\n        require (msg.value >= minAmount, \"Not enough contribution\") ;\n        uint contributed = UserInfo[msg.sender].amountBought / exchangeRate ; \n        require (msg.value + contributed <= maxAmount, \"you reached max cap\") ;\n        require (msg.value + totalContribution <= maxCap, \"maxCap is reached or almost reached\") ; \n        totalContribution += msg.value ; \n        UserInfo[msg.sender].amountBought += msg.value * exchangeRate ; \n        emit Claimed (msg.sender, msg.value) ;\n    }\n\n        // ::: CLAIM TOKENS ::: // \n\n\n    function claimTokens () external onlyWhitelisted {\n        require (workflowStatus == WorkflowStatus.StartDistribution, \"You can't claim your tokens yet\") ;\n        require (UserInfo[msg.sender].amountBought > 0, \"No presale participation\") ; \n        uint claimable = claimableAmount(msg.sender) ;\n        UserInfo[msg.sender].totalClaimed += claimable ; \n        ttk.transfer(msg.sender, claimable) ; \n        emit Claimed(msg.sender, claimable);\n    }\n\n    function claimableAmount (address _address) public view returns (uint){\n        if (block.timestamp >= vestingStartingTime + vestingDuration){\n            return (UserInfo[_address].amountBought - \n            UserInfo[_address].totalClaimed) ;\n        }\n        else {\n            uint timeLength = block.timestamp - vestingStartingTime ;\n            uint vestedSteps = timeLength / stepDuration ; \n            uint vestedPeriod = vestedSteps * stepDuration ; \n            uint totalVestedAmount = UserInfo[_address].amountBought * vestedPeriod / vestingDuration ; \n            return totalVestedAmount - UserInfo[_address].totalClaimed ;\n        }\n    }\n\n\n        // ::: ADMIN FUNCTION ::: // \n        // ::: WITHDRAW THE REMAINING TOKENS (ICO NOT SOLD OUT) + ETH ::: // \n\n    /** \n    * this is use in a very urgent situation like : we need to withdraw the tokens inside the contract\n    * to migrate to an other ICO contract but we haven't properly labelled all the variables during deployment\n    * then we need to manually set amountForSale to withdraw the right amount from the contract\n    * \n    * OR it can be used if we want to withdraw the remaining tokens from the ICO \n    */ \n    function setAmountForSale (uint amount) external onlyOwner {\n        amountForSale = toWei(amount) ; \n    }\n\n    function withdrawRemaining () external onlyOwner {\n        uint amountBought = totalContribution * exchangeRate ;\n        uint remaining = amountForSale - amountBought ; \n        ttk.transfer(multiSigAddr, remaining) ; \n    }\n\n    /// Collect the ETH raised \n\n    function withdrawEth () external onlyOwner {\n        uint contractBalance = address(this).balance ; \n        (bool sent, ) = payable(msg.sender).call{value : contractBalance }(\"\") ;\n        require (sent, \"ETH : transfer failed\") ; \n    }\n\n        // ::: STATE ::: //\n\n    function startIco () external onlyOwner {\n        require (workflowStatus == WorkflowStatus.RegisteringAddresses, \"Ico can't start now\");\n        workflowStatus = WorkflowStatus.IcoIsStarted ; \n    }\n\n    function endIco () external onlyOwner {\n        require (workflowStatus == WorkflowStatus.IcoIsStarted, \"Ico can't end now\");\n        workflowStatus = WorkflowStatus.IcoIsEnded ; \n    }\n\n    function startTokenDistribution () external onlyOwner {\n        require (workflowStatus == WorkflowStatus.IcoIsEnded, \"Distribution cant start\");\n        vestingStartingTime = block.timestamp ; \n        workflowStatus = WorkflowStatus.StartDistribution ; \n    }\n\n}",
  "sourcePath": "/Users/youv/Documents/ALYRA-projects/TicketTokenNewFront/tickets-tocken-v2/truffle/contracts/ICO.sol",
  "ast": {
    "absolutePath": "project:/contracts/ICO.sol",
    "exportedSymbols": {
      "Context": [
        756
      ],
      "ICO": [
        543
      ],
      "IERC20": [
        734
      ],
      "Ownable": [
        656
      ]
    },
    "id": 544,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "0.8",
          ".17"
        ],
        "nodeType": "PragmaDirective",
        "src": "37:23:0"
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "../node_modules/@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 544,
        "sourceUnit": 735,
        "src": "62:73:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "file": "../node_modules/@openzeppelin/contracts/access/Ownable.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 544,
        "sourceUnit": 657,
        "src": "136:69:0",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 4,
              "name": "Ownable",
              "nameLocations": [
                "224:7:0"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 656,
              "src": "224:7:0"
            },
            "id": 5,
            "nodeType": "InheritanceSpecifier",
            "src": "224:7:0"
          }
        ],
        "canonicalName": "ICO",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 543,
        "linearizedBaseContracts": [
          543,
          656,
          756
        ],
        "name": "ICO",
        "nameLocation": "217:3:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 8,
            "mutability": "mutable",
            "name": "ttk",
            "nameLocation": "246:3:0",
            "nodeType": "VariableDeclaration",
            "scope": 543,
            "src": "239:10:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$734",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 7,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 6,
                "name": "IERC20",
                "nameLocations": [
                  "239:6:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 734,
                "src": "239:6:0"
              },
              "referencedDeclaration": 734,
              "src": "239:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$734",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 10,
            "mutability": "mutable",
            "name": "decimals",
            "nameLocation": "313:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 543,
            "src": "308:13:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 9,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "308:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "3ba0b9a9",
            "id": 12,
            "mutability": "mutable",
            "name": "exchangeRate",
            "nameLocation": "341:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 543,
            "src": "329:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "329:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5f48f393",
            "id": 14,
            "mutability": "mutable",
            "name": "maxAmount",
            "nameLocation": "373:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 543,
            "src": "361:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 13,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "361:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9b2cb5d8",
            "id": 16,
            "mutability": "mutable",
            "name": "minAmount",
            "nameLocation": "401:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 543,
            "src": "389:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 15,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "389:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "23548b8b",
            "id": 18,
            "mutability": "mutable",
            "name": "maxCap",
            "nameLocation": "430:6:0",
            "nodeType": "VariableDeclaration",
            "scope": 543,
            "src": "418:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 17,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "418:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "0dcf4b8f",
            "id": 20,
            "mutability": "mutable",
            "name": "totalContribution",
            "nameLocation": "456:17:0",
            "nodeType": "VariableDeclaration",
            "scope": 543,
            "src": "444:29:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 19,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "444:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 21,
              "nodeType": "StructuredDocumentation",
              "src": "481:70:0",
              "text": "will be needed in case of a withdrawal of the TTK tokens is needed"
            },
            "id": 23,
            "mutability": "mutable",
            "name": "amountForSale",
            "nameLocation": "561:13:0",
            "nodeType": "VariableDeclaration",
            "scope": 543,
            "src": "556:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 22,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "556:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 25,
            "mutability": "mutable",
            "name": "vestingStartingTime",
            "nameLocation": "640:19:0",
            "nodeType": "VariableDeclaration",
            "scope": 543,
            "src": "635:24:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 24,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "635:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 27,
            "mutability": "mutable",
            "name": "vestingDuration",
            "nameLocation": "672:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 543,
            "src": "667:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 26,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "667:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 28,
              "nodeType": "StructuredDocumentation",
              "src": "695:85:0",
              "text": "duration of a vesting step in seconds. 1 month here aka 4 weeks = 2419200 seconds"
            },
            "id": 30,
            "mutability": "mutable",
            "name": "stepDuration",
            "nameLocation": "790:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 543,
            "src": "785:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 29,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "785:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 32,
            "mutability": "mutable",
            "name": "multiSigAddr",
            "nameLocation": "819:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 543,
            "src": "811:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 31,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "811:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "canonicalName": "ICO.userInfo",
            "id": 40,
            "members": [
              {
                "constant": false,
                "id": 34,
                "mutability": "mutable",
                "name": "whitelisted",
                "nameLocation": "871:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "866:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 33,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "866:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37,
                "mutability": "mutable",
                "name": "amountBought",
                "nameLocation": "984:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "979:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 36,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "979:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 39,
                "mutability": "mutable",
                "name": "totalClaimed",
                "nameLocation": "1013:12:0",
                "nodeType": "VariableDeclaration",
                "scope": 40,
                "src": "1008:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 38,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "1008:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "userInfo",
            "nameLocation": "847:8:0",
            "nodeType": "StructDefinition",
            "scope": 543,
            "src": "840:194:0",
            "visibility": "public"
          },
          {
            "canonicalName": "ICO.WorkflowStatus",
            "id": 45,
            "members": [
              {
                "id": 41,
                "name": "RegisteringAddresses",
                "nameLocation": "1070:20:0",
                "nodeType": "EnumValue",
                "src": "1070:20:0"
              },
              {
                "id": 42,
                "name": "IcoIsStarted",
                "nameLocation": "1100:12:0",
                "nodeType": "EnumValue",
                "src": "1100:12:0"
              },
              {
                "id": 43,
                "name": "IcoIsEnded",
                "nameLocation": "1122:10:0",
                "nodeType": "EnumValue",
                "src": "1122:10:0"
              },
              {
                "id": 44,
                "name": "StartDistribution",
                "nameLocation": "1143:17:0",
                "nodeType": "EnumValue",
                "src": "1143:17:0"
              }
            ],
            "name": "WorkflowStatus",
            "nameLocation": "1045:14:0",
            "nodeType": "EnumDefinition",
            "src": "1040:126:0"
          },
          {
            "constant": false,
            "functionSelector": "a1edffa2",
            "id": 48,
            "mutability": "mutable",
            "name": "workflowStatus",
            "nameLocation": "1194:14:0",
            "nodeType": "VariableDeclaration",
            "scope": 543,
            "src": "1172:36:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_WorkflowStatus_$45",
              "typeString": "enum ICO.WorkflowStatus"
            },
            "typeName": {
              "id": 47,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46,
                "name": "WorkflowStatus",
                "nameLocations": [
                  "1172:14:0"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 45,
                "src": "1172:14:0"
              },
              "referencedDeclaration": 45,
              "src": "1172:14:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_WorkflowStatus_$45",
                "typeString": "enum ICO.WorkflowStatus"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "e377ee1b",
            "id": 53,
            "mutability": "mutable",
            "name": "UserInfo",
            "nameLocation": "1254:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 543,
            "src": "1216:46:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_userInfo_$40_storage_$",
              "typeString": "mapping(address => struct ICO.userInfo)"
            },
            "typeName": {
              "id": 52,
              "keyType": {
                "id": 49,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1225:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1216:29:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_userInfo_$40_storage_$",
                "typeString": "mapping(address => struct ICO.userInfo)"
              },
              "valueType": {
                "id": 51,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 50,
                  "name": "userInfo",
                  "nameLocations": [
                    "1236:8:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40,
                  "src": "1236:8:0"
                },
                "referencedDeclaration": 40,
                "src": "1236:8:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_userInfo_$40_storage_ptr",
                  "typeString": "struct ICO.userInfo"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 118,
              "nodeType": "Block",
              "src": "1574:354:0",
              "statements": [
                {
                  "expression": {
                    "id": 78,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 74,
                      "name": "ttk",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8,
                      "src": "1584:3:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$734",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 76,
                          "name": "ttkAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 55,
                          "src": "1598:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 75,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 734,
                        "src": "1590:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$734_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 77,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1590:19:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$734",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1584:25:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$734",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 79,
                  "nodeType": "ExpressionStatement",
                  "src": "1584:25:0"
                },
                {
                  "expression": {
                    "id": 82,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 80,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10,
                      "src": "1620:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 81,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59,
                      "src": "1631:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1620:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 83,
                  "nodeType": "ExpressionStatement",
                  "src": "1620:20:0"
                },
                {
                  "expression": {
                    "id": 88,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 84,
                      "name": "minAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 16,
                      "src": "1651:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 86,
                          "name": "_minAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 61,
                          "src": "1669:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 85,
                        "name": "toWei",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "1663:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view returns (uint256)"
                        }
                      },
                      "id": 87,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1663:17:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1651:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 89,
                  "nodeType": "ExpressionStatement",
                  "src": "1651:29:0"
                },
                {
                  "expression": {
                    "id": 94,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 90,
                      "name": "maxAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 14,
                      "src": "1692:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 92,
                          "name": "_maxAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63,
                          "src": "1710:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 91,
                        "name": "toWei",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "1704:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view returns (uint256)"
                        }
                      },
                      "id": 93,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1704:17:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1692:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 95,
                  "nodeType": "ExpressionStatement",
                  "src": "1692:29:0"
                },
                {
                  "expression": {
                    "id": 98,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 96,
                      "name": "exchangeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "1732:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 97,
                      "name": "_exchangeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65,
                      "src": "1747:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1732:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 99,
                  "nodeType": "ExpressionStatement",
                  "src": "1732:28:0"
                },
                {
                  "expression": {
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 100,
                      "name": "maxCap",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18,
                      "src": "1772:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 102,
                          "name": "_maxCap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67,
                          "src": "1787:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 101,
                        "name": "toWei",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "1781:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view returns (uint256)"
                        }
                      },
                      "id": 103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1781:14:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1772:23:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 105,
                  "nodeType": "ExpressionStatement",
                  "src": "1772:23:0"
                },
                {
                  "expression": {
                    "id": 108,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 106,
                      "name": "multiSigAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 32,
                      "src": "1807:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 107,
                      "name": "_multiSigAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57,
                      "src": "1822:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1807:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 109,
                  "nodeType": "ExpressionStatement",
                  "src": "1807:28:0"
                },
                {
                  "expression": {
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 110,
                      "name": "vestingDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "1847:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 111,
                      "name": "_vestingDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69,
                      "src": "1865:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1847:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "1847:34:0"
                },
                {
                  "expression": {
                    "id": 116,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 114,
                      "name": "stepDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30,
                      "src": "1892:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 115,
                      "name": "_stepDuration",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "1907:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1892:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 117,
                  "nodeType": "ExpressionStatement",
                  "src": "1892:28:0"
                }
              ]
            },
            "id": 119,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 72,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 55,
                  "mutability": "mutable",
                  "name": "ttkAddress",
                  "nameLocation": "1305:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "1297:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1297:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 57,
                  "mutability": "mutable",
                  "name": "_multiSigAddr",
                  "nameLocation": "1338:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "1330:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 56,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1330:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59,
                  "mutability": "mutable",
                  "name": "_decimals",
                  "nameLocation": "1370:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "1365:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 58,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1365:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61,
                  "mutability": "mutable",
                  "name": "_minAmount",
                  "nameLocation": "1399:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "1394:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1394:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 63,
                  "mutability": "mutable",
                  "name": "_maxAmount",
                  "nameLocation": "1428:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "1423:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 62,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1423:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 65,
                  "mutability": "mutable",
                  "name": "_exchangeRate",
                  "nameLocation": "1457:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "1452:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 64,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1452:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67,
                  "mutability": "mutable",
                  "name": "_maxCap",
                  "nameLocation": "1489:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "1484:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 66,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1484:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 69,
                  "mutability": "mutable",
                  "name": "_vestingDuration",
                  "nameLocation": "1515:16:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "1510:21:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1510:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 71,
                  "mutability": "mutable",
                  "name": "_stepDuration",
                  "nameLocation": "1550:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 119,
                  "src": "1545:18:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1545:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1283:290:0"
            },
            "returnParameters": {
              "id": 73,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1574:0:0"
            },
            "scope": 543,
            "src": "1271:657:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "eventSelector": "f4b351c7293f3c20fc9912c61adbe9823a6de3162bde18c98eb6feeae232f861",
            "id": 125,
            "name": "TokenPurchase",
            "nameLocation": "1944:13:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 121,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "purchaser",
                  "nameLocation": "1976:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "1968:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 120,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1968:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 123,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2000:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 125,
                  "src": "1995:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1995:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1958:53:0"
            },
            "src": "1938:75:0"
          },
          {
            "anonymous": false,
            "eventSelector": "d8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a",
            "id": 131,
            "name": "Claimed",
            "nameLocation": "2025:7:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 127,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "claimer",
                  "nameLocation": "2051:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "2043:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 126,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2043:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 129,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "2073:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 131,
                  "src": "2068:10:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 128,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2068:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2033:51:0"
            },
            "src": "2019:67:0"
          },
          {
            "anonymous": false,
            "eventSelector": "c0979e518aa090d4568fe41de309db7f403e64db18a22ca175cc8853960f8d88",
            "id": 135,
            "name": "WorkflowStatusChange",
            "nameLocation": "2098:20:0",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 133,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "emitter",
                  "nameLocation": "2137:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 135,
                  "src": "2129:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2129:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2119:31:0"
            },
            "src": "2092:60:0"
          },
          {
            "body": {
              "id": 138,
              "nodeType": "Block",
              "src": "2185:2:0",
              "statements": []
            },
            "id": 139,
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2165:2:0"
            },
            "returnParameters": {
              "id": 137,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2185:0:0"
            },
            "scope": 543,
            "src": "2158:29:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 151,
              "nodeType": "Block",
              "src": "2221:86:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 142,
                            "name": "UserInfo",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53,
                            "src": "2240:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_userInfo_$40_storage_$",
                              "typeString": "mapping(address => struct ICO.userInfo storage ref)"
                            }
                          },
                          "id": 145,
                          "indexExpression": {
                            "expression": {
                              "id": 143,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2249:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 144,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2253:6:0",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2249:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2240:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_userInfo_$40_storage",
                            "typeString": "struct ICO.userInfo storage ref"
                          }
                        },
                        "id": 146,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2261:11:0",
                        "memberName": "whitelisted",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34,
                        "src": "2240:32:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6e6f742077686974656c6973746564",
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2274:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d96f2989eb5366a2905d499fc08724de9f6dbe8a3b2a754fa8cdb243a7c2bb16",
                          "typeString": "literal_string \"not whitelisted\""
                        },
                        "value": "not whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d96f2989eb5366a2905d499fc08724de9f6dbe8a3b2a754fa8cdb243a7c2bb16",
                          "typeString": "literal_string \"not whitelisted\""
                        }
                      ],
                      "id": 141,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2231:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2231:61:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "2231:61:0"
                },
                {
                  "id": 150,
                  "nodeType": "PlaceholderStatement",
                  "src": "2299:1:0"
                }
              ]
            },
            "id": 152,
            "name": "onlyWhitelisted",
            "nameLocation": "2202:15:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2218:2:0"
            },
            "src": "2193:114:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 165,
              "nodeType": "Block",
              "src": "2410:44:0",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 159,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 154,
                      "src": "2427:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 162,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "hexValue": "3130",
                        "id": 160,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2434:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10_by_1",
                          "typeString": "int_const 10"
                        },
                        "value": "10"
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "**",
                      "rightExpression": {
                        "id": 161,
                        "name": "decimals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10,
                        "src": "2438:8:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "2434:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2427:19:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 158,
                  "id": 164,
                  "nodeType": "Return",
                  "src": "2420:26:0"
                }
              ]
            },
            "id": 166,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "toWei",
            "nameLocation": "2362:5:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 155,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 154,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2374:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 166,
                  "src": "2369:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 153,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2369:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2368:13:0"
            },
            "returnParameters": {
              "id": 158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 157,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 166,
                  "src": "2404:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 156,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2404:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2403:6:0"
            },
            "scope": 543,
            "src": "2353:101:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 188,
              "nodeType": "Block",
              "src": "2568:160:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_WorkflowStatus_$45",
                          "typeString": "enum ICO.WorkflowStatus"
                        },
                        "id": 177,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 174,
                          "name": "workflowStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "2587:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$45",
                            "typeString": "enum ICO.WorkflowStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 175,
                            "name": "WorkflowStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "2605:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$45_$",
                              "typeString": "type(enum ICO.WorkflowStatus)"
                            }
                          },
                          "id": 176,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2620:20:0",
                          "memberName": "RegisteringAddresses",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41,
                          "src": "2605:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$45",
                            "typeString": "enum ICO.WorkflowStatus"
                          }
                        },
                        "src": "2587:53:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e2774206c697374206d6f726520616464726573736573",
                        "id": 178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2642:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c796f88cf3a68ae0c13fb33f5e1c80ee45cd1567c7bd20bb6f937aff6489fa21",
                          "typeString": "literal_string \"Can't list more addresses\""
                        },
                        "value": "Can't list more addresses"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c796f88cf3a68ae0c13fb33f5e1c80ee45cd1567c7bd20bb6f937aff6489fa21",
                          "typeString": "literal_string \"Can't list more addresses\""
                        }
                      ],
                      "id": 173,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2578:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2578:92:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "2578:92:0"
                },
                {
                  "expression": {
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 181,
                          "name": "UserInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "2682:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_userInfo_$40_storage_$",
                            "typeString": "mapping(address => struct ICO.userInfo storage ref)"
                          }
                        },
                        "id": 183,
                        "indexExpression": {
                          "id": 182,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 168,
                          "src": "2691:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2682:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_userInfo_$40_storage",
                          "typeString": "struct ICO.userInfo storage ref"
                        }
                      },
                      "id": 184,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2701:11:0",
                      "memberName": "whitelisted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34,
                      "src": "2682:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2715:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2682:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 187,
                  "nodeType": "ExpressionStatement",
                  "src": "2682:37:0"
                }
              ]
            },
            "functionSelector": "41566585",
            "id": 189,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 171,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 170,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2558:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 575,
                  "src": "2558:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2558:9:0"
              }
            ],
            "name": "whitelistAddress",
            "nameLocation": "2513:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 169,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 168,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2539:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 189,
                  "src": "2531:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 167,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2531:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2530:18:0"
            },
            "returnParameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2568:0:0"
            },
            "scope": 543,
            "src": "2504:224:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 211,
              "nodeType": "Block",
              "src": "2801:157:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_WorkflowStatus_$45",
                          "typeString": "enum ICO.WorkflowStatus"
                        },
                        "id": 200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 197,
                          "name": "workflowStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "2820:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$45",
                            "typeString": "enum ICO.WorkflowStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 198,
                            "name": "WorkflowStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "2838:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$45_$",
                              "typeString": "type(enum ICO.WorkflowStatus)"
                            }
                          },
                          "id": 199,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "2853:20:0",
                          "memberName": "RegisteringAddresses",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41,
                          "src": "2838:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$45",
                            "typeString": "enum ICO.WorkflowStatus"
                          }
                        },
                        "src": "2820:53:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616e277420756e7768696c6973742061646472657373",
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2875:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_787a76c391507049a0b72c89f7014aa55c23fa9cf2fda4de17759af7b6b3fa53",
                          "typeString": "literal_string \"Can't unwhilist address\""
                        },
                        "value": "Can't unwhilist address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_787a76c391507049a0b72c89f7014aa55c23fa9cf2fda4de17759af7b6b3fa53",
                          "typeString": "literal_string \"Can't unwhilist address\""
                        }
                      ],
                      "id": 196,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2811:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2811:90:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 203,
                  "nodeType": "ExpressionStatement",
                  "src": "2811:90:0"
                },
                {
                  "expression": {
                    "id": 209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 204,
                          "name": "UserInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "2911:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_userInfo_$40_storage_$",
                            "typeString": "mapping(address => struct ICO.userInfo storage ref)"
                          }
                        },
                        "id": 206,
                        "indexExpression": {
                          "id": 205,
                          "name": "_address",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 191,
                          "src": "2920:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2911:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_userInfo_$40_storage",
                          "typeString": "struct ICO.userInfo storage ref"
                        }
                      },
                      "id": 207,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2930:11:0",
                      "memberName": "whitelisted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34,
                      "src": "2911:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 208,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2944:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2911:38:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 210,
                  "nodeType": "ExpressionStatement",
                  "src": "2911:38:0"
                }
              ]
            },
            "functionSelector": "8ab1d681",
            "id": 212,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 194,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 193,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "2791:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 575,
                  "src": "2791:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "2791:9:0"
              }
            ],
            "name": "removeFromWhitelist",
            "nameLocation": "2743:19:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 191,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "2772:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 212,
                  "src": "2764:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 190,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2764:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2763:18:0"
            },
            "returnParameters": {
              "id": 195,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2801:0:0"
            },
            "scope": 543,
            "src": "2734:224:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 287,
              "nodeType": "Block",
              "src": "3180:605:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_WorkflowStatus_$45",
                          "typeString": "enum ICO.WorkflowStatus"
                        },
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 219,
                          "name": "workflowStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "3199:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$45",
                            "typeString": "enum ICO.WorkflowStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 220,
                            "name": "WorkflowStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "3217:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$45_$",
                              "typeString": "type(enum ICO.WorkflowStatus)"
                            }
                          },
                          "id": 221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3232:12:0",
                          "memberName": "IcoIsStarted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42,
                          "src": "3217:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$45",
                            "typeString": "enum ICO.WorkflowStatus"
                          }
                        },
                        "src": "3199:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "49434f206861736e2774207374617274656420796574206f722069732066696e6973686564",
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3246:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_616d3d12f94a50a97089113e04b908882cc1e87f4f76165e6e6a5862bef057ff",
                          "typeString": "literal_string \"ICO hasn't started yet or is finished\""
                        },
                        "value": "ICO hasn't started yet or is finished"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_616d3d12f94a50a97089113e04b908882cc1e87f4f76165e6e6a5862bef057ff",
                          "typeString": "literal_string \"ICO hasn't started yet or is finished\""
                        }
                      ],
                      "id": 218,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3190:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3190:96:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "3190:96:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 227,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3306:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3310:5:0",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "3306:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 229,
                          "name": "minAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "3319:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3306:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f75676820636f6e747269627574696f6e",
                        "id": 231,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3330:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4e13d745d3c74e170ae5b2dec6c6fd10ed57f6170165ffbcde10bed24fbb5953",
                          "typeString": "literal_string \"Not enough contribution\""
                        },
                        "value": "Not enough contribution"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4e13d745d3c74e170ae5b2dec6c6fd10ed57f6170165ffbcde10bed24fbb5953",
                          "typeString": "literal_string \"Not enough contribution\""
                        }
                      ],
                      "id": 226,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3297:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3297:59:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 233,
                  "nodeType": "ExpressionStatement",
                  "src": "3297:59:0"
                },
                {
                  "assignments": [
                    235
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 235,
                      "mutability": "mutable",
                      "name": "contributed",
                      "nameLocation": "3372:11:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 287,
                      "src": "3367:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 234,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "3367:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 243,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 236,
                          "name": "UserInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "3386:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_userInfo_$40_storage_$",
                            "typeString": "mapping(address => struct ICO.userInfo storage ref)"
                          }
                        },
                        "id": 239,
                        "indexExpression": {
                          "expression": {
                            "id": 237,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3395:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 238,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3399:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3395:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3386:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_userInfo_$40_storage",
                          "typeString": "struct ICO.userInfo storage ref"
                        }
                      },
                      "id": 240,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3407:12:0",
                      "memberName": "amountBought",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37,
                      "src": "3386:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 241,
                      "name": "exchangeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "3422:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3386:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3367:67:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 248,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 245,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3455:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 246,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3459:5:0",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "3455:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 247,
                            "name": "contributed",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 235,
                            "src": "3467:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3455:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 249,
                          "name": "maxAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14,
                          "src": "3482:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3455:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "796f752072656163686564206d617820636170",
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3493:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_957dd28320790a3de837a78ce288f3467e5e6ef72897e2ea732987d07cb38ae3",
                          "typeString": "literal_string \"you reached max cap\""
                        },
                        "value": "you reached max cap"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_957dd28320790a3de837a78ce288f3467e5e6ef72897e2ea732987d07cb38ae3",
                          "typeString": "literal_string \"you reached max cap\""
                        }
                      ],
                      "id": 244,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3446:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3446:69:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 253,
                  "nodeType": "ExpressionStatement",
                  "src": "3446:69:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 255,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3535:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 256,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3539:5:0",
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "3535:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 257,
                            "name": "totalContribution",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 20,
                            "src": "3547:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3535:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 259,
                          "name": "maxCap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18,
                          "src": "3568:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3535:39:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6d61784361702069732072656163686564206f7220616c6d6f73742072656163686564",
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3576:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7d8256af3160d828ce6f4692e446e39a5c1f89fa31373d0c2534154cff1cb97d",
                          "typeString": "literal_string \"maxCap is reached or almost reached\""
                        },
                        "value": "maxCap is reached or almost reached"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7d8256af3160d828ce6f4692e446e39a5c1f89fa31373d0c2534154cff1cb97d",
                          "typeString": "literal_string \"maxCap is reached or almost reached\""
                        }
                      ],
                      "id": 254,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3526:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3526:88:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "3526:88:0"
                },
                {
                  "expression": {
                    "id": 267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 264,
                      "name": "totalContribution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "3626:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "id": 265,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3647:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3651:5:0",
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "3647:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3626:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 268,
                  "nodeType": "ExpressionStatement",
                  "src": "3626:30:0"
                },
                {
                  "expression": {
                    "id": 278,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 269,
                          "name": "UserInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "3668:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_userInfo_$40_storage_$",
                            "typeString": "mapping(address => struct ICO.userInfo storage ref)"
                          }
                        },
                        "id": 272,
                        "indexExpression": {
                          "expression": {
                            "id": 270,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "3677:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "3681:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3677:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3668:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_userInfo_$40_storage",
                          "typeString": "struct ICO.userInfo storage ref"
                        }
                      },
                      "id": 273,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "3689:12:0",
                      "memberName": "amountBought",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37,
                      "src": "3668:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 277,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 274,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3705:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 275,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3709:5:0",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "3705:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "id": 276,
                        "name": "exchangeRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "3717:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3705:24:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3668:61:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 279,
                  "nodeType": "ExpressionStatement",
                  "src": "3668:61:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 281,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3755:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 282,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3759:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3755:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 283,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3767:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3771:5:0",
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "3767:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 280,
                      "name": "Claimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 131,
                      "src": "3746:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 285,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3746:31:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 286,
                  "nodeType": "EmitStatement",
                  "src": "3741:36:0"
                }
              ]
            },
            "documentation": {
              "id": 213,
              "nodeType": "StructuredDocumentation",
              "src": "2998:122:0",
              "text": "send tokens to the smart contract USING this function ///\n there will be an input field for it on the front ///"
            },
            "functionSelector": "d0febe4c",
            "id": 288,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 216,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 215,
                  "name": "onlyWhitelisted",
                  "nameLocations": [
                    "3164:15:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 152,
                  "src": "3164:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3164:15:0"
              }
            ],
            "name": "buyTokens",
            "nameLocation": "3134:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3144:2:0"
            },
            "returnParameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3180:0:0"
            },
            "scope": 543,
            "src": "3125:660:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 341,
              "nodeType": "Block",
              "src": "3878:405:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_WorkflowStatus_$45",
                          "typeString": "enum ICO.WorkflowStatus"
                        },
                        "id": 297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 294,
                          "name": "workflowStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "3897:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$45",
                            "typeString": "enum ICO.WorkflowStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 295,
                            "name": "WorkflowStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "3915:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$45_$",
                              "typeString": "type(enum ICO.WorkflowStatus)"
                            }
                          },
                          "id": 296,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "3930:17:0",
                          "memberName": "StartDistribution",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44,
                          "src": "3915:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$45",
                            "typeString": "enum ICO.WorkflowStatus"
                          }
                        },
                        "src": "3897:50:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e277420636c61696d20796f757220746f6b656e7320796574",
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3949:33:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4b10657adbe48af7bb3398a4362f430f905c09935269bcaa5227daa5cfd8f927",
                          "typeString": "literal_string \"You can't claim your tokens yet\""
                        },
                        "value": "You can't claim your tokens yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4b10657adbe48af7bb3398a4362f430f905c09935269bcaa5227daa5cfd8f927",
                          "typeString": "literal_string \"You can't claim your tokens yet\""
                        }
                      ],
                      "id": 293,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3888:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3888:95:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 300,
                  "nodeType": "ExpressionStatement",
                  "src": "3888:95:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 302,
                              "name": "UserInfo",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53,
                              "src": "4003:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_userInfo_$40_storage_$",
                                "typeString": "mapping(address => struct ICO.userInfo storage ref)"
                              }
                            },
                            "id": 305,
                            "indexExpression": {
                              "expression": {
                                "id": 303,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4012:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 304,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4016:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4012:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4003:20:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_userInfo_$40_storage",
                              "typeString": "struct ICO.userInfo storage ref"
                            }
                          },
                          "id": 306,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4024:12:0",
                          "memberName": "amountBought",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37,
                          "src": "4003:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4039:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4003:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2070726573616c652070617274696369706174696f6e",
                        "id": 309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4042:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ec67113696557d0d40edc5e608972c2520f41dc3cd8c27689d5037424c32a86a",
                          "typeString": "literal_string \"No presale participation\""
                        },
                        "value": "No presale participation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ec67113696557d0d40edc5e608972c2520f41dc3cd8c27689d5037424c32a86a",
                          "typeString": "literal_string \"No presale participation\""
                        }
                      ],
                      "id": 301,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3994:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3994:75:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 311,
                  "nodeType": "ExpressionStatement",
                  "src": "3994:75:0"
                },
                {
                  "assignments": [
                    313
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 313,
                      "mutability": "mutable",
                      "name": "claimable",
                      "nameLocation": "4086:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 341,
                      "src": "4081:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 312,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "4081:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 318,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 315,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4114:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4118:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4114:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 314,
                      "name": "claimableAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 407,
                      "src": "4098:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view returns (uint256)"
                      }
                    },
                    "id": 317,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4098:27:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4081:44:0"
                },
                {
                  "expression": {
                    "id": 325,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 319,
                          "name": "UserInfo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53,
                          "src": "4136:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_userInfo_$40_storage_$",
                            "typeString": "mapping(address => struct ICO.userInfo storage ref)"
                          }
                        },
                        "id": 322,
                        "indexExpression": {
                          "expression": {
                            "id": 320,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4145:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4149:6:0",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4145:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4136:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_userInfo_$40_storage",
                          "typeString": "struct ICO.userInfo storage ref"
                        }
                      },
                      "id": 323,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "4157:12:0",
                      "memberName": "totalClaimed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 39,
                      "src": "4136:33:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 324,
                      "name": "claimable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 313,
                      "src": "4173:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4136:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 326,
                  "nodeType": "ExpressionStatement",
                  "src": "4136:46:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 330,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4207:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4211:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4207:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 332,
                        "name": "claimable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 313,
                        "src": "4219:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 327,
                        "name": "ttk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "4194:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$734",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 329,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4198:8:0",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 701,
                      "src": "4194:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4194:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 334,
                  "nodeType": "ExpressionStatement",
                  "src": "4194:35:0"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 336,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4254:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 337,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4258:6:0",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4254:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 338,
                        "name": "claimable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 313,
                        "src": "4266:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 335,
                      "name": "Claimed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 131,
                      "src": "4246:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 339,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4246:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 340,
                  "nodeType": "EmitStatement",
                  "src": "4241:35:0"
                }
              ]
            },
            "functionSelector": "48c54b9d",
            "id": 342,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 291,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 290,
                  "name": "onlyWhitelisted",
                  "nameLocations": [
                    "3862:15:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 152,
                  "src": "3862:15:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "3862:15:0"
              }
            ],
            "name": "claimTokens",
            "nameLocation": "3838:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 289,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3850:2:0"
            },
            "returnParameters": {
              "id": 292,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3878:0:0"
            },
            "scope": 543,
            "src": "3829:454:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 406,
              "nodeType": "Block",
              "src": "4359:585:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 349,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "4373:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4379:9:0",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "4373:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 351,
                        "name": "vestingStartingTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 25,
                        "src": "4392:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 352,
                        "name": "vestingDuration",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "4414:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4392:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4373:56:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 404,
                    "nodeType": "Block",
                    "src": "4557:381:0",
                    "statements": [
                      {
                        "assignments": [
                          368
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 368,
                            "mutability": "mutable",
                            "name": "timeLength",
                            "nameLocation": "4576:10:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 404,
                            "src": "4571:15:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 367,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4571:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 373,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 372,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 369,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "4589:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 370,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4595:9:0",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "4589:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 371,
                            "name": "vestingStartingTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "4607:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4589:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4571:55:0"
                      },
                      {
                        "assignments": [
                          375
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 375,
                            "mutability": "mutable",
                            "name": "vestedSteps",
                            "nameLocation": "4646:11:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 404,
                            "src": "4641:16:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 374,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4641:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 379,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 376,
                            "name": "timeLength",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 368,
                            "src": "4660:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 377,
                            "name": "stepDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30,
                            "src": "4673:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4660:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4641:44:0"
                      },
                      {
                        "assignments": [
                          381
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 381,
                            "mutability": "mutable",
                            "name": "vestedPeriod",
                            "nameLocation": "4706:12:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 404,
                            "src": "4701:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 380,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4701:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 385,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 382,
                            "name": "vestedSteps",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 375,
                            "src": "4721:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 383,
                            "name": "stepDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30,
                            "src": "4735:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4721:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4701:46:0"
                      },
                      {
                        "assignments": [
                          387
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 387,
                            "mutability": "mutable",
                            "name": "totalVestedAmount",
                            "nameLocation": "4768:17:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 404,
                            "src": "4763:22:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 386,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "4763:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 396,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 393,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 388,
                                  "name": "UserInfo",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53,
                                  "src": "4788:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_userInfo_$40_storage_$",
                                    "typeString": "mapping(address => struct ICO.userInfo storage ref)"
                                  }
                                },
                                "id": 390,
                                "indexExpression": {
                                  "id": 389,
                                  "name": "_address",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 344,
                                  "src": "4797:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4788:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_userInfo_$40_storage",
                                  "typeString": "struct ICO.userInfo storage ref"
                                }
                              },
                              "id": 391,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "4807:12:0",
                              "memberName": "amountBought",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37,
                              "src": "4788:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 392,
                              "name": "vestedPeriod",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 381,
                              "src": "4822:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4788:46:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "id": 394,
                            "name": "vestingDuration",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "4837:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4788:64:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4763:89:0"
                      },
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 397,
                            "name": "totalVestedAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 387,
                            "src": "4875:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 398,
                                "name": "UserInfo",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53,
                                "src": "4895:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_userInfo_$40_storage_$",
                                  "typeString": "mapping(address => struct ICO.userInfo storage ref)"
                                }
                              },
                              "id": 400,
                              "indexExpression": {
                                "id": 399,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 344,
                                "src": "4904:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4895:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_userInfo_$40_storage",
                                "typeString": "struct ICO.userInfo storage ref"
                              }
                            },
                            "id": 401,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4914:12:0",
                            "memberName": "totalClaimed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 39,
                            "src": "4895:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4875:51:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 348,
                        "id": 403,
                        "nodeType": "Return",
                        "src": "4868:58:0"
                      }
                    ]
                  },
                  "id": 405,
                  "nodeType": "IfStatement",
                  "src": "4369:569:0",
                  "trueBody": {
                    "id": 366,
                    "nodeType": "Block",
                    "src": "4430:113:0",
                    "statements": [
                      {
                        "expression": {
                          "components": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 355,
                                    "name": "UserInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 53,
                                    "src": "4452:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_userInfo_$40_storage_$",
                                      "typeString": "mapping(address => struct ICO.userInfo storage ref)"
                                    }
                                  },
                                  "id": 357,
                                  "indexExpression": {
                                    "id": 356,
                                    "name": "_address",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 344,
                                    "src": "4461:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4452:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_userInfo_$40_storage",
                                    "typeString": "struct ICO.userInfo storage ref"
                                  }
                                },
                                "id": 358,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4471:12:0",
                                "memberName": "amountBought",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 37,
                                "src": "4452:31:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 359,
                                    "name": "UserInfo",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 53,
                                    "src": "4499:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_userInfo_$40_storage_$",
                                      "typeString": "mapping(address => struct ICO.userInfo storage ref)"
                                    }
                                  },
                                  "id": 361,
                                  "indexExpression": {
                                    "id": 360,
                                    "name": "_address",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 344,
                                    "src": "4508:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "4499:18:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_userInfo_$40_storage",
                                    "typeString": "struct ICO.userInfo storage ref"
                                  }
                                },
                                "id": 362,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "4518:12:0",
                                "memberName": "totalClaimed",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 39,
                                "src": "4499:31:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "4452:78:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "id": 364,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4451:80:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 348,
                        "id": 365,
                        "nodeType": "Return",
                        "src": "4444:87:0"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "89885049",
            "id": 407,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "claimableAmount",
            "nameLocation": "4298:15:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 344,
                  "mutability": "mutable",
                  "name": "_address",
                  "nameLocation": "4323:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 407,
                  "src": "4315:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 343,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4315:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4314:18:0"
            },
            "returnParameters": {
              "id": 348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 347,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 407,
                  "src": "4354:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 346,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4354:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4353:6:0"
            },
            "scope": 543,
            "src": "4289:655:0",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 421,
              "nodeType": "Block",
              "src": "5543:48:0",
              "statements": [
                {
                  "expression": {
                    "id": 419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 415,
                      "name": "amountForSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "5553:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 417,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 410,
                          "src": "5575:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 416,
                        "name": "toWei",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "5569:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view returns (uint256)"
                        }
                      },
                      "id": 418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5569:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5553:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 420,
                  "nodeType": "ExpressionStatement",
                  "src": "5553:29:0"
                }
              ]
            },
            "documentation": {
              "id": 408,
              "nodeType": "StructuredDocumentation",
              "src": "5068:410:0",
              "text": " this is use in a very urgent situation like : we need to withdraw the tokens inside the contract\n to migrate to an other ICO contract but we haven't properly labelled all the variables during deployment\n then we need to manually set amountForSale to withdraw the right amount from the contract\n \n OR it can be used if we want to withdraw the remaining tokens from the ICO "
            },
            "functionSelector": "d01f527f",
            "id": 422,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 413,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 412,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5533:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 575,
                  "src": "5533:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5533:9:0"
              }
            ],
            "name": "setAmountForSale",
            "nameLocation": "5493:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 411,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 410,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5516:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 422,
                  "src": "5511:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 409,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "5511:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5510:13:0"
            },
            "returnParameters": {
              "id": 414,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5543:0:0"
            },
            "scope": 543,
            "src": "5484:107:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 446,
              "nodeType": "Block",
              "src": "5646:176:0",
              "statements": [
                {
                  "assignments": [
                    428
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 428,
                      "mutability": "mutable",
                      "name": "amountBought",
                      "nameLocation": "5661:12:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 446,
                      "src": "5656:17:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 427,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5656:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 432,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 431,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 429,
                      "name": "totalContribution",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 20,
                      "src": "5676:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 430,
                      "name": "exchangeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "5696:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5676:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5656:52:0"
                },
                {
                  "assignments": [
                    434
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 434,
                      "mutability": "mutable",
                      "name": "remaining",
                      "nameLocation": "5724:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 446,
                      "src": "5719:14:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 433,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5719:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 438,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 435,
                      "name": "amountForSale",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "5736:13:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "id": 436,
                      "name": "amountBought",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 428,
                      "src": "5752:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5736:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5719:45:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 442,
                        "name": "multiSigAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32,
                        "src": "5789:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 443,
                        "name": "remaining",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 434,
                        "src": "5803:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 439,
                        "name": "ttk",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8,
                        "src": "5776:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$734",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 441,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5780:8:0",
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 701,
                      "src": "5776:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5776:37:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 445,
                  "nodeType": "ExpressionStatement",
                  "src": "5776:37:0"
                }
              ]
            },
            "functionSelector": "ee38db95",
            "id": 447,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 425,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 424,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5636:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 575,
                  "src": "5636:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5636:9:0"
              }
            ],
            "name": "withdrawRemaining",
            "nameLocation": "5606:17:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 423,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5624:2:0"
            },
            "returnParameters": {
              "id": 426,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5646:0:0"
            },
            "scope": 543,
            "src": "5597:225:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 479,
              "nodeType": "Block",
              "src": "5904:195:0",
              "statements": [
                {
                  "assignments": [
                    454
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 454,
                      "mutability": "mutable",
                      "name": "contractBalance",
                      "nameLocation": "5919:15:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 479,
                      "src": "5914:20:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 453,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "5914:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 460,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 457,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "5945:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ICO_$543",
                            "typeString": "contract ICO"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_ICO_$543",
                            "typeString": "contract ICO"
                          }
                        ],
                        "id": 456,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "5937:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 455,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5937:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 458,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "5937:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "5951:7:0",
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "5937:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5914:44:0"
                },
                {
                  "assignments": [
                    462,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 462,
                      "mutability": "mutable",
                      "name": "sent",
                      "nameLocation": "5976:4:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 479,
                      "src": "5971:9:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 461,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "5971:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 473,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6037:2:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 465,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "5994:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 466,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5998:6:0",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5994:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 464,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5986:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 463,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5986:8:0",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 467,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5986:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 468,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6006:4:0",
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "5986:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 470,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 469,
                          "name": "contractBalance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 454,
                          "src": "6019:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "5986:50:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5986:54:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5970:70:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 475,
                        "name": "sent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 462,
                        "src": "6060:4:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "455448203a207472616e73666572206661696c6564",
                        "id": 476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6066:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_169de7783957feee896b0b87b5ac2ef1d804ec54b328f74ce0a44e0340412274",
                          "typeString": "literal_string \"ETH : transfer failed\""
                        },
                        "value": "ETH : transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_169de7783957feee896b0b87b5ac2ef1d804ec54b328f74ce0a44e0340412274",
                          "typeString": "literal_string \"ETH : transfer failed\""
                        }
                      ],
                      "id": 474,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6051:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6051:39:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 478,
                  "nodeType": "ExpressionStatement",
                  "src": "6051:39:0"
                }
              ]
            },
            "documentation": {
              "id": 448,
              "nodeType": "StructuredDocumentation",
              "src": "5828:28:0",
              "text": "Collect the ETH raised "
            },
            "functionSelector": "a0ef91df",
            "id": 480,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 451,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 450,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "5894:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 575,
                  "src": "5894:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5894:9:0"
              }
            ],
            "name": "withdrawEth",
            "nameLocation": "5870:11:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 449,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5882:2:0"
            },
            "returnParameters": {
              "id": 452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5904:0:0"
            },
            "scope": 543,
            "src": "5861:238:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 498,
              "nodeType": "Block",
              "src": "6174:159:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_WorkflowStatus_$45",
                          "typeString": "enum ICO.WorkflowStatus"
                        },
                        "id": 489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 486,
                          "name": "workflowStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "6193:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$45",
                            "typeString": "enum ICO.WorkflowStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 487,
                            "name": "WorkflowStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "6211:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$45_$",
                              "typeString": "type(enum ICO.WorkflowStatus)"
                            }
                          },
                          "id": 488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6226:20:0",
                          "memberName": "RegisteringAddresses",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 41,
                          "src": "6211:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$45",
                            "typeString": "enum ICO.WorkflowStatus"
                          }
                        },
                        "src": "6193:53:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "49636f2063616e2774207374617274206e6f77",
                        "id": 490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6248:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63886002eebd3e2f8e0e11efa862b6581e91303c008b5625926978c07f71df49",
                          "typeString": "literal_string \"Ico can't start now\""
                        },
                        "value": "Ico can't start now"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_63886002eebd3e2f8e0e11efa862b6581e91303c008b5625926978c07f71df49",
                          "typeString": "literal_string \"Ico can't start now\""
                        }
                      ],
                      "id": 485,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6184:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6184:86:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 492,
                  "nodeType": "ExpressionStatement",
                  "src": "6184:86:0"
                },
                {
                  "expression": {
                    "id": 496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 493,
                      "name": "workflowStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "6280:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_WorkflowStatus_$45",
                        "typeString": "enum ICO.WorkflowStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 494,
                        "name": "WorkflowStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "6297:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$45_$",
                          "typeString": "type(enum ICO.WorkflowStatus)"
                        }
                      },
                      "id": 495,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "6312:12:0",
                      "memberName": "IcoIsStarted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42,
                      "src": "6297:27:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_WorkflowStatus_$45",
                        "typeString": "enum ICO.WorkflowStatus"
                      }
                    },
                    "src": "6280:44:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_WorkflowStatus_$45",
                      "typeString": "enum ICO.WorkflowStatus"
                    }
                  },
                  "id": 497,
                  "nodeType": "ExpressionStatement",
                  "src": "6280:44:0"
                }
              ]
            },
            "functionSelector": "89311e6f",
            "id": 499,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 483,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 482,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6164:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 575,
                  "src": "6164:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6164:9:0"
              }
            ],
            "name": "startIco",
            "nameLocation": "6143:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 481,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6152:2:0"
            },
            "returnParameters": {
              "id": 484,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6174:0:0"
            },
            "scope": 543,
            "src": "6134:199:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 517,
              "nodeType": "Block",
              "src": "6377:147:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_WorkflowStatus_$45",
                          "typeString": "enum ICO.WorkflowStatus"
                        },
                        "id": 508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 505,
                          "name": "workflowStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "6396:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$45",
                            "typeString": "enum ICO.WorkflowStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 506,
                            "name": "WorkflowStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "6414:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$45_$",
                              "typeString": "type(enum ICO.WorkflowStatus)"
                            }
                          },
                          "id": 507,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6429:12:0",
                          "memberName": "IcoIsStarted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42,
                          "src": "6414:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$45",
                            "typeString": "enum ICO.WorkflowStatus"
                          }
                        },
                        "src": "6396:45:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "49636f2063616e277420656e64206e6f77",
                        "id": 509,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6443:19:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4a9dc4013f2c1bad2089c8f22f1c3db15d58726264d1538cb3e25fb94f52f34d",
                          "typeString": "literal_string \"Ico can't end now\""
                        },
                        "value": "Ico can't end now"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4a9dc4013f2c1bad2089c8f22f1c3db15d58726264d1538cb3e25fb94f52f34d",
                          "typeString": "literal_string \"Ico can't end now\""
                        }
                      ],
                      "id": 504,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6387:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 510,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6387:76:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 511,
                  "nodeType": "ExpressionStatement",
                  "src": "6387:76:0"
                },
                {
                  "expression": {
                    "id": 515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 512,
                      "name": "workflowStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "6473:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_WorkflowStatus_$45",
                        "typeString": "enum ICO.WorkflowStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 513,
                        "name": "WorkflowStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "6490:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$45_$",
                          "typeString": "type(enum ICO.WorkflowStatus)"
                        }
                      },
                      "id": 514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "6505:10:0",
                      "memberName": "IcoIsEnded",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43,
                      "src": "6490:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_WorkflowStatus_$45",
                        "typeString": "enum ICO.WorkflowStatus"
                      }
                    },
                    "src": "6473:42:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_WorkflowStatus_$45",
                      "typeString": "enum ICO.WorkflowStatus"
                    }
                  },
                  "id": 516,
                  "nodeType": "ExpressionStatement",
                  "src": "6473:42:0"
                }
              ]
            },
            "functionSelector": "e657807b",
            "id": 518,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 502,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 501,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6367:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 575,
                  "src": "6367:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6367:9:0"
              }
            ],
            "name": "endIco",
            "nameLocation": "6348:6:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 500,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6355:2:0"
            },
            "returnParameters": {
              "id": 503,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6377:0:0"
            },
            "scope": 543,
            "src": "6339:185:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 541,
              "nodeType": "Block",
              "src": "6584:207:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_WorkflowStatus_$45",
                          "typeString": "enum ICO.WorkflowStatus"
                        },
                        "id": 527,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 524,
                          "name": "workflowStatus",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 48,
                          "src": "6603:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$45",
                            "typeString": "enum ICO.WorkflowStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 525,
                            "name": "WorkflowStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45,
                            "src": "6621:14:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$45_$",
                              "typeString": "type(enum ICO.WorkflowStatus)"
                            }
                          },
                          "id": 526,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "6636:10:0",
                          "memberName": "IcoIsEnded",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43,
                          "src": "6621:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_WorkflowStatus_$45",
                            "typeString": "enum ICO.WorkflowStatus"
                          }
                        },
                        "src": "6603:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "446973747269627574696f6e2063616e74207374617274",
                        "id": 528,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6648:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e76f9ed9a00dd44d06564b55f70b8f8374ceddb88148a8a1fc02959178570e0",
                          "typeString": "literal_string \"Distribution cant start\""
                        },
                        "value": "Distribution cant start"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e76f9ed9a00dd44d06564b55f70b8f8374ceddb88148a8a1fc02959178570e0",
                          "typeString": "literal_string \"Distribution cant start\""
                        }
                      ],
                      "id": 523,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6594:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6594:80:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 530,
                  "nodeType": "ExpressionStatement",
                  "src": "6594:80:0"
                },
                {
                  "expression": {
                    "id": 534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 531,
                      "name": "vestingStartingTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "6684:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 532,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "6706:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 533,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6712:9:0",
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6706:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6684:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 535,
                  "nodeType": "ExpressionStatement",
                  "src": "6684:37:0"
                },
                {
                  "expression": {
                    "id": 539,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 536,
                      "name": "workflowStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "6733:14:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_WorkflowStatus_$45",
                        "typeString": "enum ICO.WorkflowStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 537,
                        "name": "WorkflowStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45,
                        "src": "6750:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_WorkflowStatus_$45_$",
                          "typeString": "type(enum ICO.WorkflowStatus)"
                        }
                      },
                      "id": 538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "6765:17:0",
                      "memberName": "StartDistribution",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44,
                      "src": "6750:32:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_WorkflowStatus_$45",
                        "typeString": "enum ICO.WorkflowStatus"
                      }
                    },
                    "src": "6733:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_WorkflowStatus_$45",
                      "typeString": "enum ICO.WorkflowStatus"
                    }
                  },
                  "id": 540,
                  "nodeType": "ExpressionStatement",
                  "src": "6733:49:0"
                }
              ]
            },
            "functionSelector": "724edf00",
            "id": 542,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 521,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 520,
                  "name": "onlyOwner",
                  "nameLocations": [
                    "6574:9:0"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 575,
                  "src": "6574:9:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6574:9:0"
              }
            ],
            "name": "startTokenDistribution",
            "nameLocation": "6539:22:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 519,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6562:2:0"
            },
            "returnParameters": {
              "id": 522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6584:0:0"
            },
            "scope": 543,
            "src": "6530:261:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 544,
        "src": "208:6586:0",
        "usedErrors": []
      }
    ],
    "src": "37:6757:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.17+commit.8df45f5f.Emscripten.clang"
  },
  "networks": {
    "80001": {
      "events": {},
      "links": {},
      "address": "0x3751F1bE371Bac142c5dbc00376761E7F64FcE31",
      "transactionHash": "0x550369617a127fb7524314cf258cc18097ff601e2f3b5c8c2cdac3177d6c35f9"
    },
    "1670758146748": {
      "events": {
        "0xd8138f8a3f377c5259ca548e70e4c2de94f129f5a11036a15b69513cba2b426a": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "claimer",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Claimed",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xf4b351c7293f3c20fc9912c61adbe9823a6de3162bde18c98eb6feeae232f861": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "purchaser",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "TokenPurchase",
          "type": "event"
        },
        "0xc0979e518aa090d4568fe41de309db7f403e64db18a22ca175cc8853960f8d88": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "emitter",
              "type": "address"
            }
          ],
          "name": "WorkflowStatusChange",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x40082C8fb3dEA54E69e5c02CcF77fa059Af8E96a",
      "transactionHash": "0xee3a6c57ad0b71cc3560a4c952183a7135cf4d2e05195f044b44bb09c0a7df3a"
    }
  },
  "schemaVersion": "3.4.11",
  "updatedAt": "2022-12-11T23:29:20.946Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "buyTokens()": {
        "notice": "send tokens to the smart contract USING this function /// there will be an input field for it on the front ///"
      },
      "setAmountForSale(uint256)": {
        "notice": "this is use in a very urgent situation like : we need to withdraw the tokens inside the contract to migrate to an other ICO contract but we haven't properly labelled all the variables during deployment then we need to manually set amountForSale to withdraw the right amount from the contract  OR it can be used if we want to withdraw the remaining tokens from the ICO "
      },
      "withdrawEth()": {
        "notice": "Collect the ETH raised "
      }
    },
    "version": 1
  }
}